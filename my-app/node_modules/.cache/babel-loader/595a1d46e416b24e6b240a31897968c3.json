{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/DisplayPost.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayPost = ({\n  data,\n  back,\n  select\n}) => {\n  _s();\n\n  // const [selected, setSelected] = useState(false)\n  const [elements, setElements] = useState([]);\n  const [selected, setSelected] = useState(select); //const body = React.createElement('p', {}, 'Lorem ipsum dolor sit amet');\n  //idk if this is the best way to do this :/\n\n  const loadPost = () => {\n    if (elements.length === 0) {\n      console.log(\"adding\");\n      var newElements = [];\n      var mainDiv = document.getElementsByClassName(\"post-content\")[0]; //console.log(mainDiv);\n\n      var tempData = data;\n      var test = document.createElement(\"p\");\n      test.innerText = \"test\"; //const body = React.createElement('p', {}, 'Lorem ipsum dolor sit amet');\n\n      mainDiv.appendChild(test);\n      newElements.push(test);\n      setElements(newElements); // setSelected(true)\n      // look into react dom rendering and react elements\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"updated2\");\n\n    if (selected === true) {\n      loadPost();\n    }\n  }); // const flipSelected = () => {\n  //     setSelected(!selected)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"green\",\n        text: \"back\",\n        onClick: () => back(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DisplayPost, \"Fro2zUPI683gawX/NFIvKEEprFo=\");\n\n_c = DisplayPost;\nDisplayPost.propTypes = {\n  data: PropTypes.string,\n  profile: PropTypes.string\n};\nexport default DisplayPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayPost\");","map":{"version":3,"sources":["/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/DisplayPost.js"],"names":["useState","useEffect","PropTypes","Button","DisplayPost","data","back","select","elements","setElements","selected","setSelected","loadPost","length","console","log","newElements","mainDiv","document","getElementsByClassName","tempData","test","createElement","innerText","appendChild","push","propTypes","string","profile"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA2B;AAAA;;AAC3C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACO,MAAD,CAAxC,CAH2C,CAI3C;AACA;;AACA,QAAMK,QAAQ,GAAG,MAAM;AACnB,QAAGJ,QAAQ,CAACK,MAAT,KAAoB,CAAvB,EAAyB;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIC,OAAO,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,CAAd,CAHqB,CAIrB;;AACA,UAAIC,QAAQ,GAAGf,IAAf;AAEA,UAAIgB,IAAI,GAAGH,QAAQ,CAACI,aAAT,CAAuB,GAAvB,CAAX;AACAD,MAAAA,IAAI,CAACE,SAAL,GAAiB,MAAjB,CARqB,CASrB;;AACAN,MAAAA,OAAO,CAACO,WAAR,CAAoBH,IAApB;AACAL,MAAAA,WAAW,CAACS,IAAZ,CAAiBJ,IAAjB;AACAZ,MAAAA,WAAW,CAACO,WAAD,CAAX,CAZqB,CAarB;AACA;AACH;AACJ,GAjBD;;AAmBAf,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,QAAGL,QAAQ,KAAK,IAAhB,EAAqB;AACjBE,MAAAA,QAAQ;AACX;AACF,GALM,CAAT,CAzB2C,CAgC3C;AACA;AACA;;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,IAAI,EAAE,MAA5B;AAAoC,QAAA,OAAO,EAAE,MAAMN,IAAI,CAAC,KAAD;AAAvD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA3CD;;GAAMF,W;;KAAAA,W;AA6CNA,WAAW,CAACsB,SAAZ,GAAwB;AACpBrB,EAAAA,IAAI,EAAEH,SAAS,CAACyB,MADI;AAEpBC,EAAAA,OAAO,EAAE1B,SAAS,CAACyB;AAFC,CAAxB;AAKA,eAAevB,WAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst DisplayPost = ({ data, back, select}) => {\r\n    // const [selected, setSelected] = useState(false)\r\n    const [elements, setElements] = useState([])\r\n    const [selected, setSelected] = useState(select)\r\n    //const body = React.createElement('p', {}, 'Lorem ipsum dolor sit amet');\r\n    //idk if this is the best way to do this :/\r\n    const loadPost = () => {\r\n        if(elements.length === 0){\r\n            console.log(\"adding\");\r\n            var newElements = []\r\n            var mainDiv = document.getElementsByClassName(\"post-content\")[0];\r\n            //console.log(mainDiv);\r\n            var tempData = data;\r\n\r\n            var test = document.createElement(\"p\");\r\n            test.innerText = \"test\";    \r\n            //const body = React.createElement('p', {}, 'Lorem ipsum dolor sit amet');\r\n            mainDiv.appendChild(test);\r\n            newElements.push(test)\r\n            setElements(newElements)\r\n            // setSelected(true)\r\n            // look into react dom rendering and react elements\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"updated2\");\r\n        if(selected === true){\r\n            loadPost()\r\n        }\r\n      });\r\n\r\n    // const flipSelected = () => {\r\n    //     setSelected(!selected)\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"post-content\">\r\n                <Button color='green' text={\"back\"} onClick={() => back(false)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDisplayPost.propTypes = {\r\n    data: PropTypes.string,\r\n    profile: PropTypes.string,\r\n}\r\n\r\nexport default DisplayPost\r\n"]},"metadata":{},"sourceType":"module"}