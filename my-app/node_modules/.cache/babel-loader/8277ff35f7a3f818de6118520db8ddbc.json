{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport TaskbarButton from './components/TaskbarButton';\nimport SettingsButton from './components/SettingsButton';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport Login from './components/Login';\nimport MyProfile from './components/MyProfile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar feed = [];\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    /*{id:1, text:\"matt\",\n    day:\"test\",\n    reminder:false, data:\"https://10.0.0.5:8001/media/playlist2.m3u8\"}*/\n  ]);\n  const [tasksBottom, setTasksBottom] = useState(0);\n  const [page, setPage] = useState(0); //const [signedIn, setSignedIn] = useState(false)\n  // oh god this is disgusting\n\n  /*useEffect(() =>  {\n    const fetchTasks = async () => {\n      if(wSock){\n        wSock.onopen = async function(event){\n          wSock.send(\"test\");\n        };\n        wSock.onmessage = async function(event){\n          feed = await event.data.split(\"****\");\n          var newTasks = []\n          for(var i = 0; i < feed.length-1; i++){\n            feed[i] = await feed[i].split(\"**\")\n            await newTasks.push({id:i, text:feed[i][0],\n              day:feed[i][1],\n              reminder:false, data:feed[i][2]});\n          }\n          await setTasks(newTasks);\n          wSock.close();\n          wSock = false;\n        }\n      }\n    }\n    fetchTasks();\n  })*/\n  // useEffect(() =>  {\n  //   async function fetchContent(){\n  //     const Data={\n  //       user: \"matt\",\n  //       pass: \"12345\"\n  //     }\n  //     const otherParam={\n  //       mode: 'cors',\n  //       credentials: 'same-origin',\n  //       //headers:{\n  //       //  \"content-type\":\"application/json; charset=UTF-8\"\n  //       //},\n  //       body: JSON.stringify(Data),\n  //       method: \"POST\"\n  //     };\n  //     const response = await fetch(\"https://10.0.0.5:8000/login/\",otherParam)\n  //     const content = await response.json();\n  //     console.log(content)\n  //   }\n  //   fetchContent();\n  // })\n  // Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // Delete Task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const clearTask = () => {\n    setTasks([]);\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  const changePage = pageId => {\n    setPage(pageId);\n  };\n\n  const onSignIn = async credentials => {\n    const Data = {\n      user: credentials[0],\n      pass: credentials[1]\n    };\n    const otherParam = {\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/login/\", otherParam);\n    const content = await response.json();\n\n    if (content.valid == \"YES\") {\n      console.log(\"welcome!\");\n      await setCreds([credentials[0], credentials[1]]);\n      changePage(0);\n      return true;\n    } else {\n      console.log('invalid credentials');\n      await setCreds(['', '']);\n      return false;\n    }\n  }; //need to put in checks on the backend for invalid inputs, someone could fake a request from outside our website\n  //which would mean they could put whatever they wanted into inputs.\n\n\n  const onSignUp = async credentials => {\n    const Data = {\n      user: credentials[0],\n      pass: credentials[1],\n      first: credentials[2],\n      last: credentials[3],\n      phone: credentials[4]\n    };\n    const otherParam = {\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/signup/\", otherParam);\n    const content = await response.json();\n\n    if (content.valid == \"YES\") {\n      console.log(\"welcome!\"); //await setCreds([credentials[0], credentials[1]]);\n      //changePage(0);\n\n      return true;\n    } else {\n      console.log('invalid credentials'); //await setCreds(['','']);\n\n      return false;\n    }\n  }; // login\n  // idea: have some kind of verifaction system for every call to the api. Obviously don't include the password\n  // every time lol. Give them some kind of key.\n\n\n  const [creds, setCreds] = useState([\"\", \"\"]); // later on this will be somewhat tailored to the user, like what instagram does.\n\n  async function fetchContentAll(amount) {\n    const Data = {\n      depth: amount\n    };\n    const otherParam = {\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/content-all/\", otherParam);\n    const content = await response.json();\n    console.log(content);\n    var newTasks = [];\n\n    for (var i = 0; i < content.length; i++) {\n      await newTasks.push({\n        id: i + tasksBottom,\n        reminder: false,\n        ...content[i]\n      });\n    }\n\n    await setTasks(newTasks);\n    await setTasksBottom(tasksBottom + content.length);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [page < 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [page === -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          onSignIn: onSignIn,\n          onSignUp: onSignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }, this), page === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: creds[0],\n          onAdd: () => setShowAddTask(!showAddTask),\n          showAddTask: showAddTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n          onAdd: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n          tasks: tasks,\n          onDelete: deleteTask,\n          onToggle: toggleReminder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 30\n        }, this) : 'No Tasks to Show']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 22\n      }, this), page === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"explore\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-block\",\n          type: \"submit\",\n          value: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n          tasks: tasks,\n          onDelete: deleteTask,\n          onToggle: toggleReminder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 30\n        }, this) : 'No Tasks to Show']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 22\n      }, this), page === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 20\n    }, this), page === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-bar\",\n        children: [/*#__PURE__*/_jsxDEV(SettingsButton, {\n          text: \"Profile\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n          text: \"Following\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n          text: \"Saved\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n          text: \"Premium\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n          text: \"Settings\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MyProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbar\",\n      children: [page > -1 && /*#__PURE__*/_jsxDEV(TaskbarButton, {\n        text: \"Home\",\n        id: 0,\n        onClick: changePage,\n        contentLoad: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 23\n      }, this), page > -1 && /*#__PURE__*/_jsxDEV(TaskbarButton, {\n        text: \"Explore\",\n        id: 1,\n        onClick: changePage,\n        contentLoad: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 23\n      }, this), page > -1 && /*#__PURE__*/_jsxDEV(TaskbarButton, {\n        text: \"Groups\",\n        id: 2,\n        onClick: changePage,\n        contentLoad: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 23\n      }, this), page > -1 && /*#__PURE__*/_jsxDEV(TaskbarButton, {\n        text: \"Me\",\n        id: 3,\n        onClick: changePage,\n        contentLoad: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"u5tKGFObssDf8QJKjoLB0iqZcLo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js"],"names":["Header","Tasks","TaskbarButton","SettingsButton","useState","useEffect","AddTask","Login","MyProfile","feed","App","showAddTask","setShowAddTask","tasks","setTasks","tasksBottom","setTasksBottom","page","setPage","addTask","task","id","Math","floor","random","newTask","deleteTask","filter","clearTask","toggleReminder","map","reminder","changePage","pageId","onSignIn","credentials","Data","user","pass","otherParam","mode","body","JSON","stringify","method","response","fetch","content","json","valid","console","log","setCreds","onSignUp","first","last","phone","creds","fetchContentAll","amount","depth","newTasks","i","length","push"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,IAAIC,IAAI,GAAG,EAAX;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC;AAAC;AACtC;AACA;AAFqC,GAAD,CAAlC;AAGA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,CAAD,CAAhC,CANa,CAOb;AAEA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMe,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAAEJ,MAAAA,EAAF;AAAM,SAAGD;AAAT,KAAhB;AACAN,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWY,OAAX,CAAD,CAAR;AACD,GAJD,CAzDa,CA+Db;;;AACA,QAAMC,UAAU,GAAIL,EAAD,IAAQ;AACzBP,IAAAA,QAAQ,CAACD,KAAK,CAACc,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAWA,EAAlC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMO,SAAS,GAAG,MAAM;AACtBd,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFD,CApEa,CAwEb;;;AACA,QAAMe,cAAc,GAAIR,EAAD,IAAQ;AAC7BP,IAAAA,QAAQ,CAACD,KAAK,CAACiB,GAAN,CAAWV,IAAD,IACnBA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGD,IAAL;AAAWW,MAAAA,QAAQ,EAAE,CAACX,IAAI,CAACW;AAA3B,KAAjB,GAAyDX,IADhD,CAAD,CAAR;AAED,GAHD;;AAKA,QAAMY,UAAU,GAAIC,MAAD,IAAY;AAC7Bf,IAAAA,OAAO,CAACe,MAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAOC,WAAP,IAAuB;AACtC,UAAMC,IAAI,GAAC;AACTC,MAAAA,IAAI,EAAEF,WAAW,CAAC,CAAD,CADR;AAETG,MAAAA,IAAI,EAAEH,WAAW,CAAC,CAAD;AAFR,KAAX;AAIA,UAAMI,UAAU,GAAC;AACfC,MAAAA,IAAI,EAAE,MADS;AAEfL,MAAAA,WAAW,EAAE,aAFE;AAGf;AACA;AACA;AACAM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CANS;AAOfQ,MAAAA,MAAM,EAAE;AAPO,KAAjB;AASA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAgCP,UAAhC,CAA5B;AACA,UAAMQ,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;;AACA,QAAGD,OAAO,CAACE,KAAR,IAAiB,KAApB,EAA0B;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,YAAMC,QAAQ,CAAC,CAACjB,WAAW,CAAC,CAAD,CAAZ,EAAiBA,WAAW,CAAC,CAAD,CAA5B,CAAD,CAAd;AACAH,MAAAA,UAAU,CAAC,CAAD,CAAV;AACA,aAAO,IAAP;AACD,KALD,MAMI;AACIkB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,YAAMC,QAAQ,CAAC,CAAC,EAAD,EAAI,EAAJ,CAAD,CAAd;AACA,aAAO,KAAP;AACP;AACF,GA3BD,CAlFa,CA+Gb;AACA;;;AACA,QAAMC,QAAQ,GAAG,MAAOlB,WAAP,IAAuB;AACtC,UAAMC,IAAI,GAAC;AACTC,MAAAA,IAAI,EAAEF,WAAW,CAAC,CAAD,CADR;AAETG,MAAAA,IAAI,EAAEH,WAAW,CAAC,CAAD,CAFR;AAGTmB,MAAAA,KAAK,EAAEnB,WAAW,CAAC,CAAD,CAHT;AAIToB,MAAAA,IAAI,EAAEpB,WAAW,CAAC,CAAD,CAJR;AAKTqB,MAAAA,KAAK,EAAErB,WAAW,CAAC,CAAD;AALT,KAAX;AAOA,UAAMI,UAAU,GAAC;AACfC,MAAAA,IAAI,EAAE,MADS;AAEfL,MAAAA,WAAW,EAAE,aAFE;AAGf;AACA;AACA;AACAM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CANS;AAOfQ,MAAAA,MAAM,EAAE;AAPO,KAAjB;AASA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAiCP,UAAjC,CAA5B;AACA,UAAMQ,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;;AACA,QAAGD,OAAO,CAACE,KAAR,IAAiB,KAApB,EAA0B;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADwB,CAExB;AACA;;AACA,aAAO,IAAP;AACD,KALD,MAMI;AACFD,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EADE,CAEF;;AACA,aAAO,KAAP;AACD;AACF,GA9BD,CAjHa,CAiJb;AACA;AACA;;;AACA,QAAM,CAACM,KAAD,EAAQL,QAAR,IAAoBhD,QAAQ,CAAC,CAAC,EAAD,EAAI,EAAJ,CAAD,CAAlC,CApJa,CAsJb;;AACA,iBAAesD,eAAf,CAA+BC,MAA/B,EAAsC;AACpC,UAAMvB,IAAI,GAAC;AACTwB,MAAAA,KAAK,EAAED;AADE,KAAX;AAGA,UAAMpB,UAAU,GAAC;AACfC,MAAAA,IAAI,EAAE,MADS;AAEfL,MAAAA,WAAW,EAAE,aAFE;AAGf;AACA;AACA;AACAM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CANS;AAOfQ,MAAAA,MAAM,EAAE;AAPO,KAAjB;AASA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAsCP,UAAtC,CAA5B;AACA,UAAMQ,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,QAAIc,QAAQ,GAAG,EAAf;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGf,OAAO,CAACgB,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACrC,YAAMD,QAAQ,CAACG,IAAT,CAAc;AAAE3C,QAAAA,EAAE,EAAEyC,CAAC,GAAG/C,WAAV;AAAuBgB,QAAAA,QAAQ,EAAC,KAAhC;AAAuC,WAAGgB,OAAO,CAACe,CAAD;AAAjD,OAAd,CAAN;AACD;;AACD,UAAMhD,QAAQ,CAAC+C,QAAD,CAAd;AACA,UAAM7C,cAAc,CAACD,WAAW,GAAGgC,OAAO,CAACgB,MAAvB,CAApB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACG9C,IAAI,GAAG,CAAP,iBAAY;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACZA,IAAI,KAAK,CAAC,CAAV,iBAAe;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACd,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAEiB,QAAjB;AAA2B,UAAA,QAAQ,EAAEmB;AAArC;AAAA;AAAA;AAAA;AAAA;AADc;AAAA;AAAA;AAAA;AAAA,cADH,EAIZpC,IAAI,KAAK,CAAT,iBAAc;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACb,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEwC,KAAK,CAAC,CAAD,CAApB;AAAyB,UAAA,KAAK,EAAE,MAAM7C,cAAc,CAAC,CAACD,WAAF,CAApD;AAAoE,UAAA,WAAW,EAAEA;AAAjF;AAAA;AAAA;AAAA;AAAA,gBADa,EAEZA,WAAW,iBAAI,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEQ;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFH,EAGXN,KAAK,CAACkD,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,UAAA,KAAK,EAAElD,KAAd;AAAqB,UAAA,QAAQ,EAAEa,UAA/B;AAA2C,UAAA,QAAQ,EAAEG;AAArD;AAAA;AAAA;AAAA;AAAA,gBAAnB,GACA,kBAJW;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAUZZ,IAAI,KAAK,CAAT,iBAAc;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCAEb;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFa,eAKb;AAAO,UAAA,SAAS,EAAC,eAAjB;AAAiC,UAAA,IAAI,EAAC,QAAtC;AAA+C,UAAA,KAAK,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,gBALa,EAMXJ,KAAK,CAACkD,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,UAAA,KAAK,EAAElD,KAAd;AAAqB,UAAA,QAAQ,EAAEa,UAA/B;AAA2C,UAAA,QAAQ,EAAEG;AAArD;AAAA;AAAA;AAAA;AAAA,gBAAnB,GACA,kBAPW;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,EAmBZZ,IAAI,KAAK,CAAT,iBAAc;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADf,EAwBGA,IAAI,KAAK,CAAT,iBAAc;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACb;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,SAAtB;AAAiC,UAAA,OAAO,EAAE,MAAM,CAAE;AAAlD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,WAAtB;AAAmC,UAAA,OAAO,EAAE,MAAM,CAAE;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,OAAtB;AAA+B,UAAA,OAAO,EAAE,MAAM,CAAE;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,SAAtB;AAAiC,UAAA,OAAO,EAAE,MAAM,CAAE;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,UAAtB;AAAkC,UAAA,OAAO,EAAE,MAAM,CAAE;AAAnD;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADa,eAQb;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARa;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBjB,eAoCE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBACGA,IAAI,GAAG,CAAC,CAAR,iBAAa,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,MAArB;AAA6B,QAAA,EAAE,EAAE,CAAjC;AAAoC,QAAA,OAAO,EAAEe,UAA7C;AAAyD,QAAA,WAAW,EAAE,MAAM,CAAE;AAA9E;AAAA;AAAA;AAAA;AAAA,cADhB,EAEGf,IAAI,GAAG,CAAC,CAAR,iBAAa,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,SAArB;AAAgC,QAAA,EAAE,EAAE,CAApC;AAAuC,QAAA,OAAO,EAAEe,UAAhD;AAA4D,QAAA,WAAW,EAAE,MAAI,CAAE;AAA/E;AAAA;AAAA;AAAA;AAAA,cAFhB,EAGGf,IAAI,GAAG,CAAC,CAAR,iBAAa,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,QAArB;AAA+B,QAAA,EAAE,EAAE,CAAnC;AAAsC,QAAA,OAAO,EAAEe,UAA/C;AAA2D,QAAA,WAAW,EAAE,MAAI,CAAE;AAA9E;AAAA;AAAA;AAAA;AAAA,cAHhB,EAIGf,IAAI,GAAG,CAAC,CAAR,iBAAa,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,IAArB;AAA2B,QAAA,EAAE,EAAE,CAA/B;AAAkC,QAAA,OAAO,EAAEe,UAA3C;AAAuD,QAAA,WAAW,EAAE,MAAI,CAAE;AAA1E;AAAA;AAAA;AAAA;AAAA,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA,YApCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;GA5NQtB,G;;KAAAA,G;AA8NT,eAAeA,GAAf","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport TaskbarButton from './components/TaskbarButton'\nimport SettingsButton from './components/SettingsButton'\nimport { useState, useEffect } from 'react'\nimport AddTask from './components/AddTask'\nimport Login from './components/Login'\nimport MyProfile from './components/MyProfile'\n\nvar feed = [];\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([/*{id:1, text:\"matt\",\n    day:\"test\",\nreminder:false, data:\"https://10.0.0.5:8001/media/playlist2.m3u8\"}*/])\n  const [tasksBottom, setTasksBottom] = useState(0)\n  const [page, setPage] = useState(0)\n  //const [signedIn, setSignedIn] = useState(false)\n  \n  // oh god this is disgusting\n  /*useEffect(() =>  {\n    const fetchTasks = async () => {\n      if(wSock){\n        wSock.onopen = async function(event){\n          wSock.send(\"test\");\n        };\n        wSock.onmessage = async function(event){\n          feed = await event.data.split(\"****\");\n          var newTasks = []\n          for(var i = 0; i < feed.length-1; i++){\n            feed[i] = await feed[i].split(\"**\")\n            await newTasks.push({id:i, text:feed[i][0],\n              day:feed[i][1],\n              reminder:false, data:feed[i][2]});\n          }\n          await setTasks(newTasks);\n          wSock.close();\n          wSock = false;\n        }\n      }\n    }\n    fetchTasks();\n  })*/\n\n  // useEffect(() =>  {\n  //   async function fetchContent(){\n  //     const Data={\n  //       user: \"matt\",\n  //       pass: \"12345\"\n  //     }\n  //     const otherParam={\n  //       mode: 'cors',\n  //       credentials: 'same-origin',\n  //       //headers:{\n  //       //  \"content-type\":\"application/json; charset=UTF-8\"\n  //       //},\n  //       body: JSON.stringify(Data),\n  //       method: \"POST\"\n  //     };\n  //     const response = await fetch(\"https://10.0.0.5:8000/login/\",otherParam)\n  //     const content = await response.json();\n  //     console.log(content)\n  //   }\n  //   fetchContent();\n  // })\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !==id))\n  }\n\n  const clearTask = () => {\n    setTasks([]);\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => \n    task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n\n  const changePage = (pageId) => {\n    setPage(pageId);\n  }\n\n  const onSignIn = async (credentials) => {\n    const Data={\n      user: credentials[0],\n      pass: credentials[1]\n    }\n    const otherParam={\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/login/\",otherParam)\n    const content = await response.json();\n    if(content.valid == \"YES\"){\n      console.log(\"welcome!\");\n      await setCreds([credentials[0], credentials[1]]);\n      changePage(0);\n      return true;\n    }\n    else{\n            console.log('invalid credentials')\n            await setCreds(['','']);\n            return false;\n    }\n  }\n\n  //need to put in checks on the backend for invalid inputs, someone could fake a request from outside our website\n  //which would mean they could put whatever they wanted into inputs.\n  const onSignUp = async (credentials) => {\n    const Data={\n      user: credentials[0],\n      pass: credentials[1],\n      first: credentials[2],\n      last: credentials[3],\n      phone: credentials[4]\n    }\n    const otherParam={\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/signup/\",otherParam)\n    const content = await response.json();\n    if(content.valid == \"YES\"){\n      console.log(\"welcome!\");\n      //await setCreds([credentials[0], credentials[1]]);\n      //changePage(0);\n      return true;\n    }\n    else{\n      console.log('invalid credentials')\n      //await setCreds(['','']);\n      return false;\n    }\n  }\n\n  // login\n  // idea: have some kind of verifaction system for every call to the api. Obviously don't include the password\n  // every time lol. Give them some kind of key.\n  const [creds, setCreds] = useState([\"\",\"\"]);\n\n  // later on this will be somewhat tailored to the user, like what instagram does.\n  async function fetchContentAll(amount){\n    const Data={\n      depth: amount\n    }\n    const otherParam={\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/content-all/\",otherParam)\n    const content = await response.json();\n    console.log(content)\n    var newTasks = []\n    for(var i = 0; i < content.length; i++){\n      await newTasks.push({ id: i + tasksBottom, reminder:false, ...content[i] });\n    }\n    await setTasks(newTasks);\n    await setTasksBottom(tasksBottom + content.length)\n  }\n\n  return (\n    <div className=\"container\">\n      {page < 3 && <div className=\"main-content\">\n      {page === -1 && <div className=\"login\">\n        <Login onSignIn={onSignIn} onSignUp={onSignUp}/>\n      </div>}\n      {page === 0 && <div className=\"content\">\n        <Header title={creds[0]} onAdd={() => setShowAddTask(!showAddTask)} showAddTask={showAddTask}/>\n        {showAddTask && <AddTask onAdd={addTask}/>}\n        {(tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n        : 'No Tasks to Show')}\n      </div>}\n      {page === 1 && <div className=\"explore\">\n        {/* make a search component :P, just for looks atm. */}\n        <div className='form-control'>\n          <input type='text' placeholder='Search'/>\n        </div>\n        <input className='btn btn-block' type='submit' value='Search' />\n        {(tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n        : 'No Tasks to Show')}\n      </div>}\n      {page === 2 && <div className=\"groups\">\n   \n      </div>}\n      </div>}\n      {page === 3 && <div className=\"user\">\n        <div className=\"settings-bar\">\n          <SettingsButton text={\"Profile\"} onClick={() => {}}/>\n          <SettingsButton text={\"Following\"} onClick={() => {}}/>\n          <SettingsButton text={\"Saved\"} onClick={() => {}}/>\n          <SettingsButton text={\"Premium\"} onClick={() => {}}/>\n          <SettingsButton text={\"Settings\"} onClick={() => {}}/>\n        </div>\n        <div>\n          <MyProfile />\n        </div>\n      </div>} \n      <div className=\"taskbar\">\n        {page > -1 && <TaskbarButton text={\"Home\"} id={0} onClick={changePage} contentLoad={() => {}}/>}\n        {page > -1 && <TaskbarButton text={\"Explore\"} id={1} onClick={changePage} contentLoad={()=>{}}/>}\n        {page > -1 && <TaskbarButton text={\"Groups\"} id={2} onClick={changePage} contentLoad={()=>{}}/>}\n        {page > -1 && <TaskbarButton text={\"Me\"} id={3} onClick={changePage} contentLoad={()=>{}}/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}