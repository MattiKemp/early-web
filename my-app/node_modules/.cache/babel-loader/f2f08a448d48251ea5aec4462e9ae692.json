{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Saved.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Saved = ({\n  username,\n  onPostSelected,\n  isVisible\n}) => {\n  _s();\n\n  // idk if we should save this info here or in app.js,\n  // if we save it in app.js then we don't have to worry about \n  // making unnecessary calls to the server if the data hasn't changed.\n  // put it in here for now, should be easy to switch over to the other version later.\n  const [savedTasks, setSavedTasks] = useState([]);\n  useEffect(() => {\n    if (isVisible === true) {\n      if (prevData.data != content.data) {\n        // console.log('data changed')\n        loadPost(true);\n      } else {\n        loadPost(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"saved-content\",\n    children: isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [savedTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        onPostSelected: onPostSelected\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Saved, \"Ytl4PMXQNaaw96Xyp6K3WA+Q1s0=\");\n\n_c = Saved;\nexport default Saved;\n\nvar _c;\n\n$RefreshReg$(_c, \"Saved\");","map":{"version":3,"sources":["/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Saved.js"],"names":["useState","Task","Saved","username","onPostSelected","isVisible","savedTasks","setSavedTasks","useEffect","prevData","data","content","loadPost","map","task","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAaC,EAAAA,cAAb;AAA6BC,EAAAA;AAA7B,CAAD,KAA8C;AAAA;;AACxD;AACA;AACA;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AAEAQ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGH,SAAS,KAAK,IAAjB,EAAsB;AAElB,UAAGI,QAAQ,CAACC,IAAT,IAAiBC,OAAO,CAACD,IAA5B,EAAiC;AAC7B;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAHD,MAII;AACAA,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;AACJ;AACF,GAXM,CAAT;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACKP,SAAS,iBAAI;AAAA,iBACTC,UAAU,CAACO,GAAX,CAAgBC,IAAD,iBACZ,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAgC,QAAA,cAAc,EAAEV;AAAhD,SAAWU,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,cADH,CADS,eAIV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJU;AAAA;AAAA;AAAA;AAAA;AAAA;AADlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA9BD;;GAAMb,K;;KAAAA,K;AAgCN,eAAeA,KAAf","sourcesContent":["import { useState } from 'react'\r\nimport Task from './Task'\r\n\r\n\r\nconst Saved = ({ username , onPostSelected, isVisible }) => {\r\n    // idk if we should save this info here or in app.js,\r\n    // if we save it in app.js then we don't have to worry about \r\n    // making unnecessary calls to the server if the data hasn't changed.\r\n    // put it in here for now, should be easy to switch over to the other version later.\r\n    const [savedTasks, setSavedTasks] = useState([])\r\n    \r\n    useEffect(() => {\r\n        if(isVisible === true){\r\n\r\n            if(prevData.data != content.data){\r\n                // console.log('data changed')\r\n                loadPost(true)\r\n            }\r\n            else{\r\n                loadPost(false)\r\n            }\r\n        }\r\n      });\r\n    \r\n    return (\r\n        <div className=\"saved-content\">\r\n            {isVisible && <div>\r\n                {savedTasks.map((task) => (\r\n                    <Task key={task.id} task={task} onPostSelected={onPostSelected}/>\r\n                ))}\r\n                <p>test</p>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Saved\r\n"]},"metadata":{},"sourceType":"module"}