{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar feed = [];\nvar objFeed = [];\nvar wSock = new WebSocket(\"ws://10.0.0.5:8000/ws/test/\");\n\nwSock.onopen = function (event) {\n  wSock.send(\"test\");\n};\n\nwSock.onmessage = function (event) {\n  //console.log(event.data);\n  feed = event.data.split(\"****\");\n\n  for (var i = 0; i < feed.length - 1; i++) {\n    feed[i] = feed[i].split(\"**\");\n    objFeed.push({\n      id: i,\n      text: feed[i][0],\n      day: feed[i][1],\n      reminder: feed[i][2]\n    });\n  } //App.setState();\n\n\n  console.log(feed);\n};\n\nconsole.log(\"test\");\n\nfunction App() {\n  _s();\n\n  const name = 'Chad';\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState(\n  /*[\n  // {\n  //     id: 1,\n  //     text: 'Doctors Appointment',\n  //     day: 'Feb 5th at 2:30pm',\n  //     reminder: true\n  // },\n  // {\n  //     id: 2,\n  //     text: 'Meeting at School',\n  //     day: 'Feb 6th at 1:30pm',\n  //     reminder: true\n  // },\n  // {\n  //     id: 3,\n  //     text: 'Grocery Shopping',\n  //     day: 'Feb 5th at 2:30pm',\n  //     reminder: false\n  // }\n  ]*/\n  objFeed);\n  useEffect(() => {\n    const fetchTasks = () => {\n      //const res = await fetch\n      var wSock = new WebSocket(\"ws://10.0.0.5:8000/ws/test/\");\n\n      wSock.onopen = function (event) {\n        wSock.send(\"test\");\n      };\n\n      wSock.onmessage = function (event) {\n        feed = event.data.split(\"****\");\n\n        for (var i = 0; i < feed.length - 1; i++) {\n          feed[i] = feed[i].split(\"**\");\n          objFeed.push({\n            id: i,\n            text: feed[i][0],\n            day: feed[i][1],\n            reminder: feed[i][2]\n          });\n        }\n\n        console.log(feed);\n      };\n    };\n  }); // Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  function addLocalTask(text, day, reminder) {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...{\n        text,\n        day,\n        reminder\n      }\n    };\n    setTasks([...tasks, newTask]);\n  } // Delete Task\n\n\n  const deleteTask = id => {\n    //console.log('delete', id)\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const clearTask = () => {\n    setTasks([]);\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: name,\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAddTask: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 27\n    }, this) : 'No Tasks to Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WTrvNfTotKNHAIjBCmRacFycCdQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js"],"names":["Header","Tasks","useState","useEffect","AddTask","feed","objFeed","wSock","WebSocket","onopen","event","send","onmessage","data","split","i","length","push","id","text","day","reminder","console","log","App","name","showAddTask","setShowAddTask","tasks","setTasks","fetchTasks","addTask","task","Math","floor","random","newTask","addLocalTask","deleteTask","filter","clearTask","toggleReminder","map"],"mappings":"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","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport { useState, useEffect } from 'react'\nimport AddTask from './components/AddTask'\n\nvar feed = [];\nvar objFeed = [];\n\nvar wSock = new WebSocket(\"ws://10.0.0.5:8000/ws/test/\");\n  wSock.onopen = function(event){\n    wSock.send(\"test\");\n  };\n\n  wSock.onmessage = function(event){\n    //console.log(event.data);\n    feed = event.data.split(\"****\");\n    for(var i = 0; i < feed.length-1; i++){\n      feed[i] = feed[i].split(\"**\")\n      objFeed.push({id:i,\n        text:feed[i][0],\n        day:feed[i][1],\n        reminder:feed[i][2]}\n      );\n    }\n    //App.setState();\n    console.log(feed);\n  }\n  console.log(\"test\");\n\n\n\n\nfunction App() {\n  const name = 'Chad'\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState(/*[\n    // {\n    //     id: 1,\n    //     text: 'Doctors Appointment',\n    //     day: 'Feb 5th at 2:30pm',\n    //     reminder: true\n    // },\n    // {\n    //     id: 2,\n    //     text: 'Meeting at School',\n    //     day: 'Feb 6th at 1:30pm',\n    //     reminder: true\n    // },\n    // {\n    //     id: 3,\n    //     text: 'Grocery Shopping',\n    //     day: 'Feb 5th at 2:30pm',\n    //     reminder: false\n    // }\n  ]*/\n  objFeed)\n  useEffect(() =>  {\n    const fetchTasks = () => {\n      //const res = await fetch\n      var wSock = new WebSocket(\"ws://10.0.0.5:8000/ws/test/\");\n      wSock.onopen = function(event){\n        wSock.send(\"test\");\n      };\n\n      wSock.onmessage = function(event){\n        feed = event.data.split(\"****\");\n        for(var i = 0; i < feed.length-1; i++){\n          feed[i] = feed[i].split(\"**\")\n          objFeed.push({id:i,\n          text:feed[i][0],\n          day:feed[i][1],\n          reminder:feed[i][2]}\n        );\n      }\n    console.log(feed);\n      }\n    }\n  })\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  function addLocalTask(text, day, reminder) {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...{text, day, reminder} }\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    //console.log('delete', id)\n    setTasks(tasks.filter((task) => task.id !==id))\n  }\n\n  const clearTask = () => {\n    setTasks([]);\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => \n    task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n\n\n  return (\n    <div className=\"container\">\n      <Header title={name} onAdd={() => setShowAddTask(!showAddTask)} showAddTask={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n      : 'No Tasks to Show'}\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}