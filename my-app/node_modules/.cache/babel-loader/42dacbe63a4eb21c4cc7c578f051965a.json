{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Saved.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Saved = ({\n  username,\n  onPostSelected,\n  select\n}) => {\n  _s();\n\n  // idk if we should save this info here or in app.js,\n  // if we save it in app.js then we don't have to worry about \n  // making unnecessary calls to the server if the data hasn't changed.\n  // put it in here for now, should be easy to switch over to the other version later.\n  const [savedTasks, setSavedTasks] = useState([]);\n  const [savedTasksBottom, setSavedTasksBottom] = useState(0);\n\n  async function fetchContentFollowing(amount) {\n    if (fTasks.length === 0 || amount > 0) {\n      console.log('fetching saved content');\n      const Data = {\n        user: creds[0],\n        depth: amount\n      };\n      const otherParam = {\n        mode: 'cors',\n        credentials: 'same-origin',\n        //headers:{\n        //  \"content-type\":\"application/json; charset=UTF-8\"\n        //},\n        body: JSON.stringify(Data),\n        method: \"POST\"\n      };\n      const response = await fetch(\"https://10.0.0.5:8000/content-saved/\", otherParam);\n      const content = await response.json();\n      console.log(content);\n      var newTasks = savedTasks;\n\n      if (content !== null) {\n        // console.log(content);\n        for (var i = 0; i < content.length; i++) {\n          newTasks.push({\n            reminder: false,\n            ...content[i],\n            id: i + savedTasksBottom,\n            group: 0\n          });\n        }\n\n        await setSavedTasks(newTasks);\n        setSavedTasksBottom(savedTasksBottom + content.length);\n      } // setfetchFollowContent(false);\n\n    }\n  }\n\n  useEffect(() => {\n    if (select === true) {\n      console.log('clicked');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"saved-content\",\n    children: select && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [savedTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        onPostSelected: onPostSelected\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 24\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Saved, \"58jDALtEiKEpudTE5Vlt6t/Ijh4=\");\n\n_c = Saved;\nexport default Saved;\n\nvar _c;\n\n$RefreshReg$(_c, \"Saved\");","map":{"version":3,"sources":["/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Saved.js"],"names":["useState","useEffect","Task","Saved","username","onPostSelected","select","savedTasks","setSavedTasks","savedTasksBottom","setSavedTasksBottom","fetchContentFollowing","amount","fTasks","length","console","log","Data","user","creds","depth","otherParam","mode","credentials","body","JSON","stringify","method","response","fetch","content","json","newTasks","i","push","reminder","id","group","map","task"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAaC,EAAAA,cAAb;AAA6BC,EAAAA;AAA7B,CAAD,KAA2C;AAAA;;AACrD;AACA;AACA;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,CAAD,CAAxD;;AAGA,iBAAeW,qBAAf,CAAqCC,MAArC,EAA4C;AACxC,QAAGC,MAAM,CAACC,MAAP,KAAkB,CAAlB,IAAuBF,MAAM,GAAG,CAAnC,EAAqC;AACnCG,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,YAAMC,IAAI,GAAC;AACTC,QAAAA,IAAI,EAAEC,KAAK,CAAC,CAAD,CADF;AAETC,QAAAA,KAAK,EAAER;AAFE,OAAX;AAIA,YAAMS,UAAU,GAAC;AACfC,QAAAA,IAAI,EAAE,MADS;AAEfC,QAAAA,WAAW,EAAE,aAFE;AAGf;AACA;AACA;AACAC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf,CANS;AAOfU,QAAAA,MAAM,EAAE;AAPO,OAAjB;AASA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAwCR,UAAxC,CAA5B;AACA,YAAMS,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYc,OAAZ;AACA,UAAIE,QAAQ,GAAGzB,UAAf;;AACA,UAAGuB,OAAO,KAAK,IAAf,EAAoB;AAClB;AACA,aAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,OAAO,CAAChB,MAA3B,EAAmCmB,CAAC,EAApC,EAAuC;AACrCD,UAAAA,QAAQ,CAACE,IAAT,CAAc;AAACC,YAAAA,QAAQ,EAAC,KAAV;AAAiB,eAAGL,OAAO,CAACG,CAAD,CAA3B;AAAgCG,YAAAA,EAAE,EAAEH,CAAC,GAAGxB,gBAAxC;AAA0D4B,YAAAA,KAAK,EAAE;AAAjE,WAAd;AACD;;AACD,cAAM7B,aAAa,CAACwB,QAAD,CAAnB;AACAtB,QAAAA,mBAAmB,CAACD,gBAAgB,GAAGqB,OAAO,CAAChB,MAA5B,CAAnB;AACD,OA1BkC,CA2BnC;;AACD;AACF;;AAEHb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,MAAM,KAAK,IAAd,EAAmB;AACfS,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEH;AACF,GALM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACKV,MAAM,iBAAI;AAAA,iBACNC,UAAU,CAAC+B,GAAX,CAAgBC,IAAD,iBACZ,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAgC,QAAA,cAAc,EAAElC;AAAhD,SAAWkC,IAAI,CAACH,EAAhB;AAAA;AAAA;AAAA;AAAA,cADH,CADM,eAIP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AADf;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1DD;;GAAMjC,K;;KAAAA,K;AA4DN,eAAeA,KAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Task from './Task'\r\n\r\n\r\nconst Saved = ({ username , onPostSelected, select }) => {\r\n    // idk if we should save this info here or in app.js,\r\n    // if we save it in app.js then we don't have to worry about \r\n    // making unnecessary calls to the server if the data hasn't changed.\r\n    // put it in here for now, should be easy to switch over to the other version later.\r\n    const [savedTasks, setSavedTasks] = useState([])\r\n    const [savedTasksBottom, setSavedTasksBottom] = useState(0)\r\n\r\n\r\n    async function fetchContentFollowing(amount){\r\n        if(fTasks.length === 0 || amount > 0){\r\n          console.log('fetching saved content');\r\n          const Data={\r\n            user: creds[0],\r\n            depth: amount\r\n          }\r\n          const otherParam={\r\n            mode: 'cors',\r\n            credentials: 'same-origin',\r\n            //headers:{\r\n            //  \"content-type\":\"application/json; charset=UTF-8\"\r\n            //},\r\n            body: JSON.stringify(Data),\r\n            method: \"POST\"\r\n          };\r\n          const response = await fetch(\"https://10.0.0.5:8000/content-saved/\",otherParam)\r\n          const content = await response.json();\r\n          console.log(content)\r\n          var newTasks = savedTasks\r\n          if(content !== null){\r\n            // console.log(content);\r\n            for(var i = 0; i < content.length; i++){\r\n              newTasks.push({reminder:false, ...content[i], id: i + savedTasksBottom, group: 0});\r\n            }\r\n            await setSavedTasks(newTasks);\r\n            setSavedTasksBottom(savedTasksBottom + content.length)\r\n          }\r\n          // setfetchFollowContent(false);\r\n        }\r\n      }\r\n\r\n    useEffect(() => {\r\n        if(select === true){\r\n            console.log('clicked')\r\n\r\n        }\r\n      });\r\n    \r\n    return (\r\n        <div className=\"saved-content\">\r\n            {select && <div>\r\n                {savedTasks.map((task) => (\r\n                    <Task key={task.id} task={task} onPostSelected={onPostSelected}/>\r\n                ))}\r\n                <p>test</p>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Saved\r\n"]},"metadata":{},"sourceType":"module"}