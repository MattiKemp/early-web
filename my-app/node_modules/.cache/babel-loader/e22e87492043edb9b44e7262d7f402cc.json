{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport { FaTimes, FaTrashAlt } from 'react-icons/fa';\nimport StreamVid from './StreamVid';\nimport Image from './Image';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useState } from 'react';\nimport DisplayPost from './DisplayPost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = ({\n  task,\n  onDelete,\n  onToggle\n}) => {\n  _s();\n\n  const [selected, setSelected] = useState(false);\n\n  const clicked = () => {\n    setSelected(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task ${task.reminder ? 'reminder' : ''}`,\n    onDoubleClick: () => onToggle(task.id),\n    children: [!selected && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [task.title, \" \", /*#__PURE__*/_jsxDEV(FaTimes, {\n          style: {\n            color: 'red',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.owner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        source: 'https://10.0.0.5:8001/media/images/' + task.thumbnail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"views: \", task.views]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }, this), selected && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Task, \"jTu/AeLw5BOy6ZW1dDNXzAJjzwE=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Task.js"],"names":["FaTimes","FaTrashAlt","StreamVid","Image","React","ReactDOM","useState","DisplayPost","Task","task","onDelete","onToggle","selected","setSelected","clicked","reminder","id","title","color","cursor","owner","thumbnail","views"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,gBAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAIA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAiC;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMQ,OAAO,GAAG,MAAM;AAClBD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAG,QAAOJ,IAAI,CAACM,QAAL,GAAgB,UAAhB,GAA6B,EAAG,EAAxD;AAA4D,IAAA,aAAa,EAAE,MAAMJ,QAAQ,CAACF,IAAI,CAACO,EAAN,CAAzF;AAAA,eACK,CAACJ,QAAD,iBAAa;AAAA,8BAEd;AAAA,mBAAKH,IAAI,CAACQ,KAAV,oBAAiB,QAAC,OAAD;AAAS,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE,KAAR;AAAeC,YAAAA,MAAM,EAAE;AAAvB;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFc,eAGd;AAAA,kBAAIV,IAAI,CAACW;AAAT;AAAA;AAAA;AAAA;AAAA,cAHc,eAId,QAAC,KAAD;AAAO,QAAA,MAAM,EAAE,wCAAwCX,IAAI,CAACY;AAA5D;AAAA;AAAA;AAAA;AAAA,cAJc,eAOd;AAAA,8BAAWZ,IAAI,CAACa,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPc;AAAA;AAAA;AAAA;AAAA;AAAA,YADlB,EAWKV,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA,YAXjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAxBD;;GAAMJ,I;;KAAAA,I;AA0BN,eAAeA,IAAf","sourcesContent":["import { FaTimes, FaTrashAlt } from 'react-icons/fa'\r\nimport StreamVid from './StreamVid'\r\nimport Image from './Image'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useState } from 'react'\r\nimport DisplayPost from './DisplayPost'\r\n\r\n\r\n\r\nconst Task = ({ task, onDelete, onToggle}) => {\r\n    const [selected, setSelected] = useState(false)\r\n\r\n    const clicked = () => {\r\n        setSelected(true);\r\n    }\r\n\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`}  onDoubleClick={() => onToggle(task.id)}>\r\n            {!selected && <div>\r\n            {/* <h3>{task.title} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}/></h3> */}\r\n            <h3>{task.title} <FaTimes style={{color: 'red', cursor: 'pointer'}} /></h3>\r\n            <p>{task.owner}</p>\r\n            <Image source={'https://10.0.0.5:8001/media/images/' + task.thumbnail}/>\r\n            {/* <img scr=\"https://post.medicalnewstoday.com/wp-content/uploads/2020/02/man-exercising-plank-push-up-1200x628-facebook.jpg\"></img> */}\r\n            {/* <StreamVid url={task.data}></StreamVid> */}\r\n            <p>views: {task.views}</p>\r\n            {/* {React.createElement(\"div\", {className: \"contexCon\"}, elements)} */}\r\n            </div>}\r\n            {selected && <div>\r\n                {/* <DisplayPost data={task.data} id={task.id} selected={selected}/> */}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n"]},"metadata":{},"sourceType":"module"}