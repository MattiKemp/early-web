{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar feed = []; //var objFeed = [];\n// var wSock = new WebSocket(\"ws://10.0.0.5:8000/ws/test/\");\n//   wSock.onopen = function(event){\n//     wSock.send(\"test\");\n//   };\n//   wSock.onmessage = function(event){\n//     //console.log(event.data);\n//     feed = event.data.split(\"****\");\n//     for(var i = 0; i < feed.length-1; i++){\n//       feed[i] = feed[i].split(\"**\")\n//       objFeed.push({id:i,\n//         text:feed[i][0],\n//         day:feed[i][1],\n//         reminder:feed[i][2]}\n//       );\n//     }\n//     //App.setState();\n//     console.log(feed);\n//   }\n//   console.log(\"test\");\n\nvar wSock = new WebSocket(\"ws://10.0.0.5:8000/ws/test/\");\n\nfunction App() {\n  _s();\n\n  const name = 'Chad';\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    /*[\n    // {\n    //     id: 1,\n    //     text: 'Doctors Appointment',\n    //     day: 'Feb 5th at 2:30pm',\n    //     reminder: true\n    // },\n    // {\n    //     id: 2,\n    //     text: 'Meeting at School',\n    //     day: 'Feb 6th at 1:30pm',\n    //     reminder: true\n    // },\n    // {\n    //     id: 3,\n    //     text: 'Grocery Shopping',\n    //     day: 'Feb 5th at 2:30pm',\n    //     reminder: false\n    // }\n    ]*/\n  ]);\n  useEffect(() => {\n    const fetchTasks = () => {\n      //const res = await fetch\n      if (wSock) {\n        wSock.onopen = function (event) {\n          wSock.send(\"test\");\n        };\n\n        wSock.onmessage = function (event) {\n          feed = event.data.split(\"****\");\n\n          for (var i = 0; i < feed.length - 1; i++) {\n            feed[i] = feed[i].split(\"**\");\n            const newTask = {\n              id: i,\n              text: feed[i][0],\n              day: feed[i][1],\n              reminder: feed[i][2]\n            };\n            setTasks([...tasks, newTask]); //addTask(newTask);\n            //console.log(\"test\");\n          } //console.log(feed);\n\n\n          wSock.close();\n          wSock = false;\n        };\n      }\n    };\n\n    fetchTasks();\n  });\n  console.log(tasks); // Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // function addLocalTask(text, day, reminder) {\n  //   const id = Math.floor(Math.random() * 10000) + 1\n  //   const newTask = { id, ...{text, day, reminder} }\n  //   setTasks([...tasks, newTask])\n  // }\n  // Delete Task\n\n\n  const deleteTask = id => {\n    //console.log('delete', id)\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const clearTask = () => {\n    setTasks([]);\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: name,\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAddTask: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 27\n    }, this) : 'No Tasks to Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fMhcZ8vjC5bgtplrFoj8ZqCwORM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js"],"names":["Header","Tasks","useState","useEffect","AddTask","feed","wSock","WebSocket","App","name","showAddTask","setShowAddTask","tasks","setTasks","fetchTasks","onopen","event","send","onmessage","data","split","i","length","newTask","id","text","day","reminder","close","console","log","addTask","task","Math","floor","random","deleteTask","filter","clearTask","toggleReminder","map"],"mappings":"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","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport { useState, useEffect } from 'react'\nimport AddTask from './components/AddTask'\n\nvar feed = [];\n//var objFeed = [];\n\n// var wSock = new WebSocket(\"ws://10.0.0.5:8000/ws/test/\");\n//   wSock.onopen = function(event){\n//     wSock.send(\"test\");\n//   };\n\n//   wSock.onmessage = function(event){\n//     //console.log(event.data);\n//     feed = event.data.split(\"****\");\n//     for(var i = 0; i < feed.length-1; i++){\n//       feed[i] = feed[i].split(\"**\")\n//       objFeed.push({id:i,\n//         text:feed[i][0],\n//         day:feed[i][1],\n//         reminder:feed[i][2]}\n//       );\n//     }\n//     //App.setState();\n//     console.log(feed);\n//   }\n//   console.log(\"test\");\n\nvar wSock = new WebSocket(\"ws://10.0.0.5:8000/ws/test/\");\n\n\nfunction App() {\n  const name = 'Chad'\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([/*[\n    // {\n    //     id: 1,\n    //     text: 'Doctors Appointment',\n    //     day: 'Feb 5th at 2:30pm',\n    //     reminder: true\n    // },\n    // {\n    //     id: 2,\n    //     text: 'Meeting at School',\n    //     day: 'Feb 6th at 1:30pm',\n    //     reminder: true\n    // },\n    // {\n    //     id: 3,\n    //     text: 'Grocery Shopping',\n    //     day: 'Feb 5th at 2:30pm',\n    //     reminder: false\n    // }\n  ]*/\n])\n  useEffect(() =>  {\n    const fetchTasks =  () => {\n      //const res = await fetch\n      if(wSock){\n      wSock.onopen = function(event){\n        wSock.send(\"test\");\n      };\n      wSock.onmessage = function(event){\n         feed = event.data.split(\"****\");\n        for(var i = 0; i < feed.length-1; i++){\n          feed[i] = feed[i].split(\"**\")\n          const newTask = {id:i, text:feed[i][0],\n            day:feed[i][1],\n            reminder:feed[i][2]}\n          setTasks([...tasks, newTask])\n          //addTask(newTask);\n          //console.log(\"test\");\n      }\n    //console.log(feed);\n    wSock.close();\n    wSock = false;\n      }\n    }\n    }\n    fetchTasks();\n  })\n\n  console.log(tasks);\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  // function addLocalTask(text, day, reminder) {\n  //   const id = Math.floor(Math.random() * 10000) + 1\n  //   const newTask = { id, ...{text, day, reminder} }\n  //   setTasks([...tasks, newTask])\n  // }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    //console.log('delete', id)\n    setTasks(tasks.filter((task) => task.id !==id))\n  }\n\n  const clearTask = () => {\n    setTasks([]);\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => \n    task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n\n\n  return (\n    <div className=\"container\">\n      <Header title={name} onAdd={() => setShowAddTask(!showAddTask)} showAddTask={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n      : 'No Tasks to Show'}\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}