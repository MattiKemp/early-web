{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport TaskbarButton from './components/TaskbarButton';\nimport SettingsButton from './components/SettingsButton';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport Login from './components/Login';\nimport MyProfile from './components/MyProfile';\nimport { isCompositeComponent } from 'react-dom/cjs/react-dom-test-utils.production.min';\nimport DisplayPost from './components/DisplayPost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [creds, setCreds] = useState([\"\", \"\"]);\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [fTasks, setFTasks] = useState([]);\n  const [fTasksBottom, setFTasksBottom] = useState(0); //const [showAddTask, setShowAddTask] = useState(false)\n\n  const [eTasks, setETasks] = useState([]);\n  const [eTasksBottom, setETasksBottom] = useState(0);\n  const [page, setPage] = useState(-1); //const [signedIn, setSignedIn] = useState(false)\n\n  const [fetchFollowContent, setfetchFollowContent] = useState(false); // viewing posts\n\n  const [postSelected, setPostSelected] = useState(false);\n  const [selectedPostContent, setSelectedPostContent] = useState({\n    data: \"\",\n    profile: \"\"\n  }); // Add Task\n\n  const addTask = (task, group) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n\n    if (group === 0) {\n      setFTasks([...fTasks, newTask]);\n    } else if (group === 1) {\n      setETasks([...eTasks, newTask]);\n    }\n  }; // Delete Task\n\n\n  const deleteTask = (id, group) => {\n    if (group === 0) {\n      setFTasks(fTasks.filter(task => task.id !== id));\n    } else if (group === 1) {\n      setETasks(eTasks.filter(task => task.id !== id));\n    }\n  };\n\n  const clearTask = () => {\n    setFTasks([]);\n    setETasks([]);\n  }; // Toggle Reminder\n\n\n  const toggleReminder = (id, group) => {\n    if (group === 0) {\n      setFTasks(fTasks.map(task => task.id === id ? { ...task,\n        reminder: !task.reminder\n      } : task));\n    } else if (group === 1) {\n      setETasks(eTasks.map(task => task.id === id ? { ...task,\n        reminder: !task.reminder\n      } : task));\n    }\n  };\n\n  const changeSelect = postData => {\n    setSelectedPostContent(postData);\n    setPostSelected(true);\n  };\n\n  const changePage = pageId => {\n    setPage(pageId);\n  };\n\n  const onSignIn = async credentials => {\n    const Data = {\n      user: credentials[0],\n      pass: credentials[1]\n    };\n    const otherParam = {\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/login/\", otherParam);\n    const content = await response.json();\n\n    if (content.valid === \"YES\") {\n      console.log(\"welcome!\");\n      await setCreds([credentials[0], credentials[1]]); //console.log(creds);\n\n      await setfetchFollowContent(true);\n      changePage(0); //fetchContentFollowing(10);\n\n      return true;\n    } else {\n      console.log('invalid credentials'); //await setCreds(['','']);\n\n      return false;\n    }\n  }; //need to put in checks on the backend for invalid inputs, someone could fake a request from outside our website\n  //which would mean they could put whatever they wanted into inputs.\n\n\n  const onSignUp = async credentials => {\n    const Data = {\n      user: credentials[0],\n      pass: credentials[1],\n      first: credentials[2],\n      last: credentials[3],\n      phone: credentials[4]\n    };\n    const otherParam = {\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/signup/\", otherParam);\n    const content = await response.json();\n\n    if (content.valid === \"YES\") {\n      console.log(\"welcome!\"); //await setCreds([credentials[0], credentials[1]]);\n      //changePage(0);\n\n      return true;\n    } else {\n      console.log('invalid credentials'); //await setCreds(['','']);\n\n      return false;\n    }\n  }; // login\n  // idea: have some kind of verifaction system for every call to the api. Obviously don't include the password\n  // every time lol. Give them some kind of key.\n  // later on this will be somewhat tailored to the user, like what instagram does.\n\n\n  async function fetchContentAll(amount) {\n    if (eTasks.length === 0 || amount > 0) {\n      console.log('fetching explore content');\n      const Data = {\n        depth: amount\n      };\n      const otherParam = {\n        mode: 'cors',\n        credentials: 'same-origin',\n        //headers:{\n        //  \"content-type\":\"application/json; charset=UTF-8\"\n        //},\n        body: JSON.stringify(Data),\n        method: \"POST\"\n      };\n      const response = await fetch(\"https://10.0.0.5:8000/content-all/\", otherParam);\n      const content = await response.json(); //console.log(content)\n\n      var newTasks = eTasks;\n\n      for (var i = 0; i < content.length; i++) {\n        await newTasks.push({\n          reminder: false,\n          ...content[i],\n          id: i + eTasksBottom,\n          group: 1\n        });\n      }\n\n      await setETasks(newTasks);\n      await setETasksBottom(eTasksBottom + content.length); //console.log(eTasksBottom)\n    }\n  }\n\n  async function fetchContentFollowing(amount) {\n    if (fTasks.length === 0 || amount > 0) {\n      console.log('fetching follow content');\n      const Data = {\n        user: creds[0],\n        depth: amount\n      };\n      const otherParam = {\n        mode: 'cors',\n        credentials: 'same-origin',\n        //headers:{\n        //  \"content-type\":\"application/json; charset=UTF-8\"\n        //},\n        body: JSON.stringify(Data),\n        method: \"POST\"\n      };\n      const response = await fetch(\"https://10.0.0.5:8000/content-following/\", otherParam);\n      const content = await response.json(); //console.log(content)\n\n      var newTasks = fTasks;\n\n      if (content !== null) {\n        console.log(content);\n\n        for (var i = 0; i < content.length; i++) {\n          newTasks.push({\n            reminder: false,\n            ...content[i],\n            id: i + fTasksBottom,\n            group: 0\n          });\n        }\n\n        await setFTasks(newTasks);\n        setFTasksBottom(fTasksBottom + content.length);\n      } // setfetchFollowContent(false);\n\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"updated\");\n\n    if (fetchFollowContent) {\n      fetchContentFollowing(10);\n      setfetchFollowContent(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!postSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [page < 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [page === -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onSignIn: onSignIn,\n            onSignUp: onSignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this), page === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            title: creds[0],\n            onAdd: () => setShowAddTask(!showAddTask),\n            showAddTask: showAddTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 11\n          }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n            onAdd: addTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 27\n          }, this), fTasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: fTasks,\n            onDelete: deleteTask,\n            onToggle: toggleReminder,\n            onPostSelected: changeSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 33\n          }, this) : 'No content to show!']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 24\n        }, this), page === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"explore\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn btn-block\",\n            type: \"submit\",\n            value: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }, this), eTasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: eTasks,\n            onDelete: deleteTask,\n            onToggle: toggleReminder,\n            onPostSelected: changeSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 33\n          }, this) : 'No Tasks to Show']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 24\n        }, this), page === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"groups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 22\n      }, this), page === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-bar\",\n          children: [/*#__PURE__*/_jsxDEV(SettingsButton, {\n            text: \"Profile\",\n            onClick: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n            text: \"Following\",\n            onClick: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n            text: \"Saved\",\n            onClick: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n            text: \"Premium\",\n            onClick: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n            text: \"Settings\",\n            onClick: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MyProfile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskbar\",\n        children: [page > -1 && /*#__PURE__*/_jsxDEV(TaskbarButton, {\n          text: \"Home\",\n          id: 0,\n          onClick: changePage,\n          contentLoad: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), page > -1 && /*#__PURE__*/_jsxDEV(TaskbarButton, {\n          text: \"Explore\",\n          id: 1,\n          onClick: changePage,\n          contentLoad: fetchContentAll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this), page > -1 && /*#__PURE__*/_jsxDEV(TaskbarButton, {\n          text: \"Groups\",\n          id: 2,\n          onClick: changePage,\n          contentLoad: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this), page > -1 && /*#__PURE__*/_jsxDEV(TaskbarButton, {\n          text: \"Me\",\n          id: 3,\n          onClick: changePage,\n          contentLoad: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }, this), postSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DisplayPost, {\n        data: selectedPostContent,\n        back: setPostSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+etQGnKJHQTAvykEBlyPI0hkQUo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js"],"names":["Header","Tasks","TaskbarButton","SettingsButton","useState","useEffect","AddTask","Login","MyProfile","isCompositeComponent","DisplayPost","App","creds","setCreds","showAddTask","setShowAddTask","fTasks","setFTasks","fTasksBottom","setFTasksBottom","eTasks","setETasks","eTasksBottom","setETasksBottom","page","setPage","fetchFollowContent","setfetchFollowContent","postSelected","setPostSelected","selectedPostContent","setSelectedPostContent","data","profile","addTask","task","group","id","Math","floor","random","newTask","deleteTask","filter","clearTask","toggleReminder","map","reminder","changeSelect","postData","changePage","pageId","onSignIn","credentials","Data","user","pass","otherParam","mode","body","JSON","stringify","method","response","fetch","content","json","valid","console","log","onSignUp","first","last","phone","fetchContentAll","amount","length","depth","newTasks","i","push","fetchContentFollowing"],"mappings":"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","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport TaskbarButton from './components/TaskbarButton'\nimport SettingsButton from './components/SettingsButton'\nimport { useState, useEffect } from 'react'\nimport AddTask from './components/AddTask'\nimport Login from './components/Login'\nimport MyProfile from './components/MyProfile'\nimport { isCompositeComponent } from 'react-dom/cjs/react-dom-test-utils.production.min'\nimport DisplayPost from './components/DisplayPost'\n\n\nfunction App() {\n  const [creds, setCreds] = useState([\"\",\"\"]);\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [fTasks, setFTasks] = useState([])\n  const [fTasksBottom, setFTasksBottom] = useState(0)\n  //const [showAddTask, setShowAddTask] = useState(false)\n  const [eTasks, setETasks] = useState([])\n  const [eTasksBottom, setETasksBottom] = useState(0)\n  const [page, setPage] = useState(-1)\n  //const [signedIn, setSignedIn] = useState(false)\n  const [fetchFollowContent, setfetchFollowContent] = useState(false)\n  // viewing posts\n  const [postSelected, setPostSelected] = useState(false)\n  const [selectedPostContent, setSelectedPostContent] = useState({data:\"\", profile:\"\"})\n\n  // Add Task\n  const addTask = (task, group) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    if(group === 0){\n      setFTasks([...fTasks, newTask])\n    }\n    else if(group === 1){\n      setETasks([...eTasks, newTask])\n    }\n  }\n\n  // Delete Task\n  const deleteTask = (id, group) => {\n    if(group === 0){\n      setFTasks(fTasks.filter((task) => task.id !==id))\n    }\n    else if(group === 1){\n      setETasks(eTasks.filter((task) => task.id !==id))\n    }\n  }\n\n  const clearTask = () => {\n    setFTasks([])\n    setETasks([]);\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id, group) => {\n    if(group === 0){\n      setFTasks(fTasks.map((task) => \n      task.id === id ? { ...task, reminder: !task.reminder } : task))\n    }\n    else if(group === 1){\n      setETasks(eTasks.map((task) => \n      task.id === id ? { ...task, reminder: !task.reminder } : task))\n    }\n  }\n\n  const changeSelect = (postData) => {\n    setSelectedPostContent(postData)\n    setPostSelected(true)\n  }\n\n  const changePage = (pageId) => {\n    setPage(pageId);\n  }\n\n  const onSignIn = async (credentials) => {\n    const Data={\n      user: credentials[0],\n      pass: credentials[1]\n    }\n    const otherParam={\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/login/\",otherParam)\n    const content = await response.json();\n    if(content.valid === \"YES\"){\n      console.log(\"welcome!\");\n      await setCreds([credentials[0], credentials[1]]);\n      //console.log(creds);\n      await setfetchFollowContent(true);\n      changePage(0);\n      //fetchContentFollowing(10);\n      return true;\n    }\n    else{\n      console.log('invalid credentials')\n      //await setCreds(['','']);\n      return false;\n    }\n  }\n\n  //need to put in checks on the backend for invalid inputs, someone could fake a request from outside our website\n  //which would mean they could put whatever they wanted into inputs.\n  const onSignUp = async (credentials) => {\n    const Data={\n      user: credentials[0],\n      pass: credentials[1],\n      first: credentials[2],\n      last: credentials[3],\n      phone: credentials[4]\n    }\n    const otherParam={\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/signup/\",otherParam)\n    const content = await response.json();\n    if(content.valid === \"YES\"){\n      console.log(\"welcome!\");\n      //await setCreds([credentials[0], credentials[1]]);\n      //changePage(0);\n      return true;\n    }\n    else{\n      console.log('invalid credentials')\n      //await setCreds(['','']);\n      return false;\n    }\n  }\n\n  // login\n  // idea: have some kind of verifaction system for every call to the api. Obviously don't include the password\n  // every time lol. Give them some kind of key.\n\n  // later on this will be somewhat tailored to the user, like what instagram does.\n  async function fetchContentAll(amount){\n    if(eTasks.length === 0 || amount > 0){\n      console.log('fetching explore content');\n      const Data={\n        depth: amount\n      }\n      const otherParam={\n        mode: 'cors',\n        credentials: 'same-origin',\n        //headers:{\n        //  \"content-type\":\"application/json; charset=UTF-8\"\n        //},\n        body: JSON.stringify(Data),\n        method: \"POST\"\n      };\n      const response = await fetch(\"https://10.0.0.5:8000/content-all/\",otherParam)\n      const content = await response.json();\n      //console.log(content)\n      var newTasks = eTasks\n      for(var i = 0; i < content.length; i++){\n        await newTasks.push({reminder:false, ...content[i], id: i + eTasksBottom, group: 1});\n      }\n      await setETasks(newTasks);\n      await setETasksBottom(eTasksBottom + content.length)\n      //console.log(eTasksBottom)\n    }\n  }\n\n  async function fetchContentFollowing(amount){\n    if(fTasks.length === 0 || amount > 0){\n      console.log('fetching follow content');\n      const Data={\n        user: creds[0],\n        depth: amount\n      }\n      const otherParam={\n        mode: 'cors',\n        credentials: 'same-origin',\n        //headers:{\n        //  \"content-type\":\"application/json; charset=UTF-8\"\n        //},\n        body: JSON.stringify(Data),\n        method: \"POST\"\n      };\n      const response = await fetch(\"https://10.0.0.5:8000/content-following/\",otherParam)\n      const content = await response.json();\n      //console.log(content)\n      var newTasks = fTasks\n      if(content !== null){\n        console.log(content);\n        for(var i = 0; i < content.length; i++){\n          newTasks.push({reminder:false, ...content[i], id: i + fTasksBottom, group: 0});\n        }\n        await setFTasks(newTasks);\n        setFTasksBottom(fTasksBottom + content.length)\n      }\n      // setfetchFollowContent(false);\n    }\n  }\n\n\n  useEffect(() => {\n    console.log(\"updated\");\n    if(fetchFollowContent){\n      fetchContentFollowing(10);\n      setfetchFollowContent(false);\n    }\n  });\n\n\n\n  return (\n    <div className=\"container\">\n      {!postSelected && <div>\n        {page < 3 && <div className=\"main-content\">\n        {page === -1 && <div className=\"login\">\n          <Login onSignIn={onSignIn} onSignUp={onSignUp}/>\n        </div>}\n        {page === 0 && <div className=\"content\">\n          {/* {loginTest && fetchContentFollowing(10) && setLoginTest(false)} */}\n          <Header title={creds[0]} onAdd={() => setShowAddTask(!showAddTask)} showAddTask={showAddTask}/>\n          {showAddTask && <AddTask onAdd={addTask}/>}\n          {(fTasks.length > 0 ? <Tasks tasks={fTasks} onDelete={deleteTask} onToggle={toggleReminder} onPostSelected={changeSelect}/>\n          : 'No content to show!')}\n        </div>}\n        {page === 1 && <div className=\"explore\">\n          {/* make a search component :P, just for looks atm. */}\n          <div className='form-control'>\n            <input type='text' placeholder='Search'/>\n          </div>\n          <input className='btn btn-block' type='submit' value='Search' />\n          {(eTasks.length > 0 ? <Tasks tasks={eTasks} onDelete={deleteTask} onToggle={toggleReminder} onPostSelected={changeSelect}/>\n          : 'No Tasks to Show')}\n        </div>}\n        {page === 2 && <div className=\"groups\">\n    \n        </div>}\n        </div>}\n        {page === 3 && <div className=\"user\">\n          <div className=\"settings-bar\">\n            <SettingsButton text={\"Profile\"} onClick={() => {}}/>\n            <SettingsButton text={\"Following\"} onClick={() => {}}/>\n            <SettingsButton text={\"Saved\"} onClick={() => {}}/>\n            <SettingsButton text={\"Premium\"} onClick={() => {}}/>\n            <SettingsButton text={\"Settings\"} onClick={() => {}}/>\n          </div>\n          <div>\n            <MyProfile />\n          </div>\n        </div>}\n        <div className=\"taskbar\">\n          {page > -1 && <TaskbarButton text={\"Home\"} id={0} onClick={changePage} contentLoad={() => {}}/>}\n          {page > -1 && <TaskbarButton text={\"Explore\"} id={1} onClick={changePage} contentLoad={fetchContentAll}/>}\n          {page > -1 && <TaskbarButton text={\"Groups\"} id={2} onClick={changePage} contentLoad={()=>{}}/>}\n          {page > -1 && <TaskbarButton text={\"Me\"} id={3} onClick={changePage} contentLoad={()=>{}}/>}\n        </div>\n      </div>}\n      {postSelected && <div>\n        <DisplayPost data={selectedPostContent} back={setPostSelected}/>\n      </div>}\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}