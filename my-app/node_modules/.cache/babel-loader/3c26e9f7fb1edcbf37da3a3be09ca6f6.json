{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Following.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Profiles from './Profiles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Following = ({\n  username,\n  select\n}) => {\n  _s();\n\n  // idk if we should save this info here or in app.js,\n  // if we save it in app.js then we don't have to worry about \n  // making unnecessary calls to the server if the data hasn't changed.\n  // put it in here for now, should be easy to switch over to the other version later.\n  const [followingProfiles, setFollowingProfiles] = useState([]);\n  const [followingBottom, setFollowingBottom] = useState(0);\n  const [fetchProfiles, setfetchProfiles] = useState(true); // all of these async functions are getting called twice per load, figure this out later.\n\n  async function fetchFollowingProfiles(amount) {\n    if (followingProfiles.length === 0 || amount > 0) {\n      //   console.log('fetching following content');\n      const Data = {\n        user: username,\n        depth: amount\n      };\n      const otherParam = {\n        mode: 'cors',\n        credentials: 'same-origin',\n        //headers:{\n        //  \"content-type\":\"application/json; charset=UTF-8\"\n        //},\n        body: JSON.stringify(Data),\n        method: \"POST\"\n      };\n      const response = await fetch(\"https://10.0.0.5:8000/content-profile-following/\", otherParam);\n      const content = await response.json(); //   console.log(content)\n\n      var newProfiles = followingProfiles;\n\n      if (content !== null) {\n        // console.log(content);\n        for (var i = 0; i < content.length; i++) {\n          newProfiles.push({ ...content[i],\n            localId: i + followingBottom\n          });\n        }\n\n        await setFollowingProfiles(newProfiles);\n        setFollowingBottom(followingBottom + content.length);\n      } // setfetchFollowContent(false);\n\n    }\n  }\n\n  useEffect(() => {\n    if (select === true && fetchProfiles === true) {\n      fetchFollowingProfiles(10);\n      setfetchProfiles(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"following-content\",\n    children: select && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Profiles, {\n        profiles: followingProfiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 24\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Following, \"E88TFdojxUwBKBiItE/Fc6/GK5Q=\");\n\n_c = Following;\nexport default Following;\n\nvar _c;\n\n$RefreshReg$(_c, \"Following\");","map":{"version":3,"sources":["/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Following.js"],"names":["useState","useEffect","Profiles","Following","username","select","followingProfiles","setFollowingProfiles","followingBottom","setFollowingBottom","fetchProfiles","setfetchProfiles","fetchFollowingProfiles","amount","length","Data","user","depth","otherParam","mode","credentials","body","JSON","stringify","method","response","fetch","content","json","newProfiles","i","push","localId"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA0B;AAAA;;AACxC;AACA;AACA;AACA;AACA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,IAAD,CAAlD,CAPwC,CASxC;;AACA,iBAAeY,sBAAf,CAAsCC,MAAtC,EAA6C;AACzC,QAAGP,iBAAiB,CAACQ,MAAlB,KAA6B,CAA7B,IAAkCD,MAAM,GAAG,CAA9C,EAAgD;AAChD;AACE,YAAME,IAAI,GAAC;AACTC,QAAAA,IAAI,EAAEZ,QADG;AAETa,QAAAA,KAAK,EAAEJ;AAFE,OAAX;AAIA,YAAMK,UAAU,GAAC;AACfC,QAAAA,IAAI,EAAE,MADS;AAEfC,QAAAA,WAAW,EAAE,aAFE;AAGf;AACA;AACA;AACAC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CANS;AAOfS,QAAAA,MAAM,EAAE;AAPO,OAAjB;AASA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAD,EAAoDR,UAApD,CAA5B;AACA,YAAMS,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB,CAhB8C,CAiBhD;;AACE,UAAIC,WAAW,GAAGvB,iBAAlB;;AACA,UAAGqB,OAAO,KAAK,IAAf,EAAoB;AAClB;AACA,aAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,OAAO,CAACb,MAA3B,EAAmCgB,CAAC,EAApC,EAAuC;AACnCD,UAAAA,WAAW,CAACE,IAAZ,CAAiB,EAAC,GAAGJ,OAAO,CAACG,CAAD,CAAX;AAAgBE,YAAAA,OAAO,EAAEF,CAAC,GAAGtB;AAA7B,WAAjB;AACH;;AACD,cAAMD,oBAAoB,CAACsB,WAAD,CAA1B;AACApB,QAAAA,kBAAkB,CAACD,eAAe,GAAGmB,OAAO,CAACb,MAA3B,CAAlB;AACD,OA1B6C,CA2B9C;;AACD;AACF;;AAEHb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGI,MAAM,KAAK,IAAX,IAAmBK,aAAa,KAAK,IAAxC,EAA6C;AACzCE,MAAAA,sBAAsB,CAAC,EAAD,CAAtB;AACAD,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH;AACJ,GALQ,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,cACKN,MAAM,iBAAI;AAAA,6BACP,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA;AADf;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAxDD;;GAAMH,S;;KAAAA,S;AA0DN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Profiles from './Profiles'\r\n\r\nconst Following = ({ username, select }) => {\r\n    // idk if we should save this info here or in app.js,\r\n    // if we save it in app.js then we don't have to worry about \r\n    // making unnecessary calls to the server if the data hasn't changed.\r\n    // put it in here for now, should be easy to switch over to the other version later.\r\n    const [followingProfiles, setFollowingProfiles] = useState([])\r\n    const [followingBottom, setFollowingBottom] = useState(0)\r\n    const [fetchProfiles, setfetchProfiles] = useState(true)\r\n\r\n    // all of these async functions are getting called twice per load, figure this out later.\r\n    async function fetchFollowingProfiles(amount){\r\n        if(followingProfiles.length === 0 || amount > 0){\r\n        //   console.log('fetching following content');\r\n          const Data={\r\n            user: username,\r\n            depth: amount\r\n          }\r\n          const otherParam={\r\n            mode: 'cors',\r\n            credentials: 'same-origin',\r\n            //headers:{\r\n            //  \"content-type\":\"application/json; charset=UTF-8\"\r\n            //},\r\n            body: JSON.stringify(Data),\r\n            method: \"POST\"\r\n          };\r\n          const response = await fetch(\"https://10.0.0.5:8000/content-profile-following/\",otherParam)\r\n          const content = await response.json();\r\n        //   console.log(content)\r\n          var newProfiles = followingProfiles\r\n          if(content !== null){\r\n            // console.log(content);\r\n            for(var i = 0; i < content.length; i++){\r\n                newProfiles.push({...content[i], localId: i + followingBottom});\r\n            }\r\n            await setFollowingProfiles(newProfiles);\r\n            setFollowingBottom(followingBottom + content.length)\r\n          }\r\n          // setfetchFollowContent(false);\r\n        }\r\n      }\r\n\r\n    useEffect(() => {\r\n        if(select === true && fetchProfiles === true){\r\n            fetchFollowingProfiles(10)\r\n            setfetchProfiles(false)\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"following-content\">\r\n            {select && <div>\r\n                <Profiles profiles={followingProfiles}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Following\r\n"]},"metadata":{},"sourceType":"module"}