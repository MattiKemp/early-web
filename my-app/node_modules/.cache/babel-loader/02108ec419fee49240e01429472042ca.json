{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport TaskbarButton from './components/TaskbarButton';\nimport SettingsButton from './components/SettingsButton';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport Login from './components/Login';\nimport MyProfile from './components/MyProfile';\nimport { isCompositeComponent } from 'react-dom/cjs/react-dom-test-utils.production.min';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [creds, setCreds] = useState([\"\", \"\"]);\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [fTasks, setFTasks] = useState([]);\n  const [fTasksBottom, setFTasksBottom] = useState(0); //const [showAddTask, setShowAddTask] = useState(false)\n\n  const [eTasks, setETasks] = useState([]);\n  const [eTasksBottom, setETasksBottom] = useState(0);\n  const [page, setPage] = useState(-1); //const [signedIn, setSignedIn] = useState(false)\n  // useEffect(() =>  {\n  //   async function fetchContent(){\n  //   }\n  //   fetchContent();\n  // })\n  // Add Task\n\n  const addTask = (task, group) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n\n    if (group === 0) {\n      setFTasks([...fTasks, newTask]);\n    } else if (group === 1) {\n      setETasks([...eTasks, newTask]);\n    }\n  }; // Delete Task\n\n\n  const deleteTask = (id, group) => {\n    if (group === 0) {\n      setFTasks(fTasks.filter(task => task.id !== id));\n    } else if (group === 1) {\n      setETasks(eTasks.filter(task => task.id !== id));\n    }\n  };\n\n  const clearTask = () => {\n    setFTasks([]);\n    setETasks([]);\n  }; // Toggle Reminder\n\n\n  const toggleReminder = (id, group) => {\n    if (group === 0) {\n      setFTasks(fTasks.map(task => task.id === id ? { ...task,\n        reminder: !task.reminder\n      } : task));\n    } else if (group === 1) {\n      setETasks(eTasks.map(task => task.id === id ? { ...task,\n        reminder: !task.reminder\n      } : task));\n    }\n  };\n\n  const changePage = pageId => {\n    setPage(pageId);\n  };\n\n  const onSignIn = async credentials => {\n    const Data = {\n      user: credentials[0],\n      pass: credentials[1]\n    };\n    const otherParam = {\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/login/\", otherParam);\n    const content = await response.json();\n\n    if (content.valid === \"YES\") {\n      console.log(\"welcome!\");\n      setCreds([credentials[0], credentials[1]]); //console.log(creds);\n\n      changePage(0); //fetchContentFollowing(10);\n\n      loginTest = true;\n      return true;\n    } else {\n      console.log('invalid credentials'); //await setCreds(['','']);\n\n      return false;\n    }\n  }; //need to put in checks on the backend for invalid inputs, someone could fake a request from outside our website\n  //which would mean they could put whatever they wanted into inputs.\n\n\n  const onSignUp = async credentials => {\n    const Data = {\n      user: credentials[0],\n      pass: credentials[1],\n      first: credentials[2],\n      last: credentials[3],\n      phone: credentials[4]\n    };\n    const otherParam = {\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/signup/\", otherParam);\n    const content = await response.json();\n\n    if (content.valid === \"YES\") {\n      console.log(\"welcome!\"); //await setCreds([credentials[0], credentials[1]]);\n      //changePage(0);\n\n      return true;\n    } else {\n      console.log('invalid credentials'); //await setCreds(['','']);\n\n      return false;\n    }\n  }; // login\n  // idea: have some kind of verifaction system for every call to the api. Obviously don't include the password\n  // every time lol. Give them some kind of key.\n  // later on this will be somewhat tailored to the user, like what instagram does.\n\n\n  async function fetchContentAll(amount) {\n    if (eTasks.length === 0 || amount > 0) {\n      const Data = {\n        depth: amount\n      };\n      const otherParam = {\n        mode: 'cors',\n        credentials: 'same-origin',\n        //headers:{\n        //  \"content-type\":\"application/json; charset=UTF-8\"\n        //},\n        body: JSON.stringify(Data),\n        method: \"POST\"\n      };\n      const response = await fetch(\"https://10.0.0.5:8000/content-all/\", otherParam);\n      const content = await response.json();\n      console.log(content);\n      var newTasks = eTasks;\n\n      for (var i = 0; i < content.length; i++) {\n        await newTasks.push({\n          reminder: false,\n          ...content[i],\n          id: i + eTasksBottom,\n          group: 1\n        });\n      }\n\n      await setETasks(newTasks);\n      await setETasksBottom(eTasksBottom + content.length); //console.log(eTasksBottom)\n    }\n  }\n\n  async function fetchContentFollowing(amount) {\n    if (eTasks.length === 0 || amount > 0) {\n      const Data = {\n        user: creds[0],\n        depth: amount\n      };\n      const otherParam = {\n        mode: 'cors',\n        credentials: 'same-origin',\n        //headers:{\n        //  \"content-type\":\"application/json; charset=UTF-8\"\n        //},\n        body: JSON.stringify(Data),\n        method: \"POST\"\n      };\n      const response = await fetch(\"https://10.0.0.5:8000/content-following/\", otherParam);\n      const content = await response.json();\n      console.log(content);\n      var newTasks = eTasks;\n\n      if (content !== null) {\n        for (var i = 0; i < content.length; i++) {\n          await newTasks.push({\n            reminder: false,\n            ...content[i],\n            id: i + fTasksBottom,\n            group: 1\n          });\n        }\n\n        await setFTasks(newTasks);\n        await setFTasksBottom(eTasksBottom + content.length);\n      }\n    }\n  }\n\n  var loginTest = false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [page < 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [page === -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          onSignIn: onSignIn,\n          onSignUp: onSignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 23\n      }, this), page === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [!loginTest && fetchContentFollowing(10), /*#__PURE__*/_jsxDEV(Header, {\n          title: creds[0],\n          onAdd: () => setShowAddTask(!showAddTask),\n          showAddTask: showAddTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n          onAdd: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), fTasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n          tasks: fTasks,\n          onDelete: deleteTask,\n          onToggle: toggleReminder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 31\n        }, this) : 'No content to show!']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 22\n      }, this), page === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"explore\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-block\",\n          type: \"submit\",\n          value: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }, this), eTasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n          tasks: eTasks,\n          onDelete: deleteTask,\n          onToggle: toggleReminder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 31\n        }, this) : 'No Tasks to Show']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 22\n      }, this), page === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 20\n    }, this), page === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-bar\",\n        children: [/*#__PURE__*/_jsxDEV(SettingsButton, {\n          text: \"Profile\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n          text: \"Following\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n          text: \"Saved\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n          text: \"Premium\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n          text: \"Settings\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MyProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbar\",\n      children: [page > -1 && /*#__PURE__*/_jsxDEV(TaskbarButton, {\n        text: \"Home\",\n        id: 0,\n        onClick: changePage,\n        contentLoad: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 23\n      }, this), page > -1 && /*#__PURE__*/_jsxDEV(TaskbarButton, {\n        text: \"Explore\",\n        id: 1,\n        onClick: changePage,\n        contentLoad: fetchContentAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 23\n      }, this), page > -1 && /*#__PURE__*/_jsxDEV(TaskbarButton, {\n        text: \"Groups\",\n        id: 2,\n        onClick: changePage,\n        contentLoad: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 23\n      }, this), page > -1 && /*#__PURE__*/_jsxDEV(TaskbarButton, {\n        text: \"Me\",\n        id: 3,\n        onClick: changePage,\n        contentLoad: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7/fKZPL5IDYZguyhWjolpPIEBs8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js"],"names":["Header","Tasks","TaskbarButton","SettingsButton","useState","useEffect","AddTask","Login","MyProfile","isCompositeComponent","App","creds","setCreds","showAddTask","setShowAddTask","fTasks","setFTasks","fTasksBottom","setFTasksBottom","eTasks","setETasks","eTasksBottom","setETasksBottom","page","setPage","addTask","task","group","id","Math","floor","random","newTask","deleteTask","filter","clearTask","toggleReminder","map","reminder","changePage","pageId","onSignIn","credentials","Data","user","pass","otherParam","mode","body","JSON","stringify","method","response","fetch","content","json","valid","console","log","loginTest","onSignUp","first","last","phone","fetchContentAll","amount","length","depth","newTasks","i","push","fetchContentFollowing"],"mappings":"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","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport TaskbarButton from './components/TaskbarButton'\nimport SettingsButton from './components/SettingsButton'\nimport { useState, useEffect } from 'react'\nimport AddTask from './components/AddTask'\nimport Login from './components/Login'\nimport MyProfile from './components/MyProfile'\nimport { isCompositeComponent } from 'react-dom/cjs/react-dom-test-utils.production.min'\n\n\nfunction App() {\n  const [creds, setCreds] = useState([\"\",\"\"]);\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [fTasks, setFTasks] = useState([])\n  const [fTasksBottom, setFTasksBottom] = useState(0)\n  //const [showAddTask, setShowAddTask] = useState(false)\n  const [eTasks, setETasks] = useState([])\n  const [eTasksBottom, setETasksBottom] = useState(0)\n  const [page, setPage] = useState(-1)\n  //const [signedIn, setSignedIn] = useState(false)\n  \n\n  // useEffect(() =>  {\n  //   async function fetchContent(){\n  //   }\n  //   fetchContent();\n  // })\n\n  // Add Task\n  const addTask = (task, group) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    if(group === 0){\n      setFTasks([...fTasks, newTask])\n    }\n    else if(group === 1){\n      setETasks([...eTasks, newTask])\n    }\n  }\n\n\n  // Delete Task\n  const deleteTask = (id, group) => {\n    if(group === 0){\n      setFTasks(fTasks.filter((task) => task.id !==id))\n    }\n    else if(group === 1){\n      setETasks(eTasks.filter((task) => task.id !==id))\n    }\n  }\n\n  const clearTask = () => {\n    setFTasks([])\n    setETasks([]);\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id, group) => {\n    if(group === 0){\n      setFTasks(fTasks.map((task) => \n      task.id === id ? { ...task, reminder: !task.reminder } : task))\n    }\n    else if(group === 1){\n      setETasks(eTasks.map((task) => \n      task.id === id ? { ...task, reminder: !task.reminder } : task))\n    }\n  }\n\n  const changePage = (pageId) => {\n    setPage(pageId);\n  }\n\n  const onSignIn = async (credentials) => {\n    const Data={\n      user: credentials[0],\n      pass: credentials[1]\n    }\n    const otherParam={\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/login/\",otherParam)\n    const content = await response.json();\n    if(content.valid === \"YES\"){\n      console.log(\"welcome!\");\n      setCreds([credentials[0], credentials[1]]);\n      //console.log(creds);\n      changePage(0);\n      //fetchContentFollowing(10);\n      loginTest = true;\n      return true;\n    }\n    else{\n      console.log('invalid credentials')\n      //await setCreds(['','']);\n      return false;\n    }\n  }\n\n  //need to put in checks on the backend for invalid inputs, someone could fake a request from outside our website\n  //which would mean they could put whatever they wanted into inputs.\n  const onSignUp = async (credentials) => {\n    const Data={\n      user: credentials[0],\n      pass: credentials[1],\n      first: credentials[2],\n      last: credentials[3],\n      phone: credentials[4]\n    }\n    const otherParam={\n      mode: 'cors',\n      credentials: 'same-origin',\n      //headers:{\n      //  \"content-type\":\"application/json; charset=UTF-8\"\n      //},\n      body: JSON.stringify(Data),\n      method: \"POST\"\n    };\n    const response = await fetch(\"https://10.0.0.5:8000/signup/\",otherParam)\n    const content = await response.json();\n    if(content.valid === \"YES\"){\n      console.log(\"welcome!\");\n      //await setCreds([credentials[0], credentials[1]]);\n      //changePage(0);\n      return true;\n    }\n    else{\n      console.log('invalid credentials')\n      //await setCreds(['','']);\n      return false;\n    }\n  }\n\n  // login\n  // idea: have some kind of verifaction system for every call to the api. Obviously don't include the password\n  // every time lol. Give them some kind of key.\n\n  // later on this will be somewhat tailored to the user, like what instagram does.\n  async function fetchContentAll(amount){\n    if(eTasks.length === 0 || amount > 0){\n      const Data={\n        depth: amount\n      }\n      const otherParam={\n        mode: 'cors',\n        credentials: 'same-origin',\n        //headers:{\n        //  \"content-type\":\"application/json; charset=UTF-8\"\n        //},\n        body: JSON.stringify(Data),\n        method: \"POST\"\n      };\n      const response = await fetch(\"https://10.0.0.5:8000/content-all/\",otherParam)\n      const content = await response.json();\n      console.log(content)\n      var newTasks = eTasks\n      for(var i = 0; i < content.length; i++){\n        await newTasks.push({reminder:false, ...content[i], id: i + eTasksBottom, group: 1});\n      }\n      await setETasks(newTasks);\n      await setETasksBottom(eTasksBottom + content.length)\n      //console.log(eTasksBottom)\n    }\n  }\n\n  async function fetchContentFollowing(amount){\n    if(eTasks.length === 0 || amount > 0){\n      const Data={\n        user: creds[0],\n        depth: amount\n      }\n      const otherParam={\n        mode: 'cors',\n        credentials: 'same-origin',\n        //headers:{\n        //  \"content-type\":\"application/json; charset=UTF-8\"\n        //},\n        body: JSON.stringify(Data),\n        method: \"POST\"\n      };\n      const response = await fetch(\"https://10.0.0.5:8000/content-following/\",otherParam)\n      const content = await response.json();\n      console.log(content)\n      var newTasks = eTasks\n      if(content !== null){\n        for(var i = 0; i < content.length; i++){\n          await newTasks.push({reminder:false, ...content[i], id: i + fTasksBottom, group: 1});\n        }\n        await setFTasks(newTasks);\n        await setFTasksBottom(eTasksBottom + content.length)\n      }\n    }\n  }\n\n  var loginTest = false;\n  return (\n    <div className=\"container\">\n      {page < 3 && <div className=\"main-content\">\n      {page === -1 && <div className=\"login\">\n        <Login onSignIn={onSignIn} onSignUp={onSignUp}/>\n      </div>}\n      {page === 0 && <div className=\"content\">\n        {!loginTest && fetchContentFollowing(10)}\n        <Header title={creds[0]} onAdd={() => setShowAddTask(!showAddTask)} showAddTask={showAddTask}/>\n        {showAddTask && <AddTask onAdd={addTask}/>}\n        {(fTasks.length > 0 ? <Tasks tasks={fTasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n        : 'No content to show!')}\n      </div>}\n      {page === 1 && <div className=\"explore\">\n        {/* make a search component :P, just for looks atm. */}\n        <div className='form-control'>\n          <input type='text' placeholder='Search'/>\n        </div>\n        <input className='btn btn-block' type='submit' value='Search' />\n        {(eTasks.length > 0 ? <Tasks tasks={eTasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n        : 'No Tasks to Show')}\n      </div>}\n      {page === 2 && <div className=\"groups\">\n   \n      </div>}\n      </div>}\n      {page === 3 && <div className=\"user\">\n        <div className=\"settings-bar\">\n          <SettingsButton text={\"Profile\"} onClick={() => {}}/>\n          <SettingsButton text={\"Following\"} onClick={() => {}}/>\n          <SettingsButton text={\"Saved\"} onClick={() => {}}/>\n          <SettingsButton text={\"Premium\"} onClick={() => {}}/>\n          <SettingsButton text={\"Settings\"} onClick={() => {}}/>\n        </div>\n        <div>\n          <MyProfile />\n        </div>\n      </div>} \n      <div className=\"taskbar\">\n        {page > -1 && <TaskbarButton text={\"Home\"} id={0} onClick={changePage} contentLoad={() => {}}/>}\n        {page > -1 && <TaskbarButton text={\"Explore\"} id={1} onClick={changePage} contentLoad={fetchContentAll}/>}\n        {page > -1 && <TaskbarButton text={\"Groups\"} id={2} onClick={changePage} contentLoad={()=>{}}/>}\n        {page > -1 && <TaskbarButton text={\"Me\"} id={3} onClick={changePage} contentLoad={()=>{}}/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}