{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState } from 'react';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const name = 'Chad';\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctors Appointment',\n    day: 'Feb 5th at 2:30pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Meeting at School',\n    day: 'Feb 6th at 1:30pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Grocery Shopping',\n    day: 'Feb 5th at 2:30pm',\n    reminder: false\n  }]); // Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // Delete Task\n\n\n  const deleteTask = id => {\n    //console.log('delete', id)\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  var wSock = new WebSocket(\"ws://10.0.0.5:8000/Root\");\n\n  wSock.onopen = function (event) {\n    wSock.send(\"test\");\n  };\n\n  wSock.onmessage = function (event) {\n    console.log(event.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: name,\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAddTask: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }, this) : 'No Tasks to Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iu5q5TG1T3sgkh0CEtjA01UuS+4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js"],"names":["Header","Tasks","useState","AddTask","App","name","showAddTask","setShowAddTask","tasks","setTasks","id","text","day","reminder","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","wSock","WebSocket","onopen","event","send","onmessage","console","log","data","length"],"mappings":"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","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport { useState } from 'react'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const name = 'Chad'\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true\n    },\n    {\n        id: 2,\n        text: 'Meeting at School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true\n    },\n    {\n        id: 3,\n        text: 'Grocery Shopping',\n        day: 'Feb 5th at 2:30pm',\n        reminder: false\n    }\n  ])\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    //console.log('delete', id)\n    setTasks(tasks.filter((task) => task.id !==id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => \n    task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n\n  var wSock = new WebSocket(\"ws://10.0.0.5:8000/Root\");\n  wSock.onopen = function(event){\n    wSock.send(\"test\");\n  };\n  wSock.onmessage = function(event){\n    console.log(event.data);\n  }\n \n  return (\n    <div className=\"container\">\n      <Header title={name} onAdd={() => setShowAddTask(!showAddTask)} showAddTask={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n      : 'No Tasks to Show'}\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}