[{"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/index.js":"1","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js":"2","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/reportWebVitals.js":"3","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/AddTask.js":"4","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Header.js":"5","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Tasks.js":"6","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Button.js":"7","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Task.js":"8","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/StreamVid.js":"9","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/TaskbarButton.js":"10","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Login.js":"11","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/SettingsButton.js":"12","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/MyProfile.js":"13"},{"size":501,"mtime":1627025478361,"results":"14","hashOfConfig":"15"},{"size":8404,"mtime":1627471938378,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1627025478344,"results":"17","hashOfConfig":"15"},{"size":951,"mtime":1627388160656,"results":"18","hashOfConfig":"15"},{"size":557,"mtime":1627388144893,"results":"19","hashOfConfig":"15"},{"size":307,"mtime":1627029114714,"results":"20","hashOfConfig":"15"},{"size":518,"mtime":1627025478404,"results":"21","hashOfConfig":"15"},{"size":565,"mtime":1627387470271,"results":"22","hashOfConfig":"15"},{"size":734,"mtime":1627025478396,"results":"23","hashOfConfig":"15"},{"size":720,"mtime":1627387181203,"results":"24","hashOfConfig":"15"},{"size":3202,"mtime":1627031941540,"results":"25","hashOfConfig":"15"},{"size":594,"mtime":1627028894507,"results":"26","hashOfConfig":"15"},{"size":2345,"mtime":1627032867856,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"169h1gb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/index.js",[],["59","60"],"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/App.js",["61","62","63"],"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/reportWebVitals.js",[],"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/AddTask.js",[],"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Header.js",[],"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Tasks.js",[],"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Button.js",[],"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Task.js",["64"],"import { FaTimes, FaTrashAlt } from 'react-icons/fa'\r\nimport StreamVid from './StreamVid'\r\n\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.title} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}/></h3>\r\n            <p>{task.owner}</p>\r\n            <StreamVid url={task.data}></StreamVid>\r\n            <p>views: {task.views}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/StreamVid.js",["65","66","67"],"import { FaTimes, FaTrashAlt } from 'react-icons/fa'\r\nimport Hls from 'hls.js';\r\n\r\nimport ReactHlsPlayer from 'react-hls-player';\r\n\r\nconst StreamVid = ({ url, onStream }) => {\r\n    const embedVideo = (url) => {\r\n        var video = document.getElementsByClassName('vid');\r\n        var hls = new Hls();\r\n        hls.loadSource(url);\r\n        hls.attachMedia(video);\r\n      }\r\n    embedVideo(url);\r\n    var config = {testBandwidth: false,\r\n        lowLatencyMode:false}\r\n      \r\n    return (\r\n        <div >\r\n            {/* <video className={'vid'}></video> */}\r\n            <ReactHlsPlayer src={url} autoPlay={false} controls={true} width=\"100%\" height=\"auto\" ></ReactHlsPlayer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StreamVid\r\n","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/TaskbarButton.js",[],"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/Login.js",["68","69","70"],"import { useState } from 'react'\r\nimport Button from './Button'\r\n\r\nconst Login = ({ onSignIn, onSignUp }) => {\r\n    const [user, setUser] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const [first, setFirst] = useState('')\r\n    const [last, setLast] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [remember, setRemember] = useState(false)\r\n    const [signUp, setSignUp] = useState(false)\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!user){\r\n            alert('Please add a username')\r\n        }\r\n\r\n        if(!pass){\r\n            alert('Please enter a password')\r\n        }\r\n        if(!signUp){\r\n            var result = onSignIn([user, pass, remember])\r\n            //setUser('')\r\n            setPass('')\r\n            //setRemember(false)\r\n        }\r\n        else {\r\n            if(!first){\r\n                alert('Please enter a first name')\r\n            }\r\n            if(!last){\r\n                alert('Please enter a last name')\r\n            }\r\n            var result = onSignUp([user, pass, first, last, phone])\r\n            setPass('')\r\n            setFirst('')\r\n            setLast('')\r\n            setPhone('')\r\n        }\r\n    }\r\n    //this is gross, change this later\r\n    const changeSignUp = () => {\r\n        setSignUp(!signUp);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className='add-form' onSubmit={onSubmit}>\r\n                <div className='form-control'>\r\n                    <label>Username</label>\r\n                    <input type='text' placeholder='Username' value={user} onChange={(e) => setUser(e.target.value)}/>\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label>Password</label>\r\n                    <input type='text' placeholder='Password' value={pass} onChange={(e) => setPass(e.target.value)}/>\r\n                </div>\r\n                {signUp && <div className='form-control'>\r\n                    <label>First Name</label>\r\n                    <input type='text' placeholder='FirstName' value={first} onChange={(e) => setFirst(e.target.value)}/>\r\n                </div>}\r\n                {signUp && <div className='form-control'>\r\n                    <label>Last Name</label>\r\n                    <input type='text' placeholder='LastName' value={last} onChange={(e) => setLast(e.target.value)}/>\r\n                </div>}\r\n                {signUp && <div className='form-control'>\r\n                    <label>Phone Number (Optional)</label>\r\n                    <input type='text' placeholder='PhoneNumber' value={phone} onChange={(e) => setPhone(e.target.value)}/>\r\n                </div>}\r\n                {!signUp && <div className='form-control-check'>\r\n                    <label>Remember Me</label>\r\n                    <input type='checkbox' checked={remember} value={remember} onChange={(e) => setRemember(e.currentTarget.checked)}/>\r\n\r\n                </div>}\r\n                <input className='btn btn-block' type='submit' value='Login' />\r\n            </form>\r\n            <input className='btn btn-block' type='button' value=\"Sign Up\" onClick={() => changeSignUp()}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/SettingsButton.js",[],"/mnt/c/Users/Eatme/Desktop/Company/early-web/my-app/src/components/MyProfile.js",["71"],"import { useState } from 'react'\r\n\r\nconst MyProfile = ({ onAdd, url, info}) => {\r\n    const [edit, setEdit] = useState(false)\r\n    const [first, setFirst] = useState('')\r\n    const [last, setLast] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [prevValues, setPrevValues] = useState(['','',''])\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        setEdit(!edit)\r\n    }\r\n\r\n    const onEdit = () => {\r\n        setPrevValues([first, last, description])\r\n        setEdit(!edit);\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setFirst(prevValues[0])\r\n        setLast(prevValues[1])\r\n        setDescription(prevValues[2])\r\n        setEdit(!edit)\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile-content\">\r\n            {edit && <form className='add-form' onSubmit={onSubmit}>\r\n                <div className='form-control'>\r\n                    <label>First Name</label>\r\n                    <input type='text' placeholder='First' value={first} onChange={(e) => setFirst(e.target.value)}/>\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label>Last Name</label>\r\n                    <input type='text' placeholder='Last' value={last} onChange={(e) => setLast(e.target.value)}/>\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label>About Me</label>\r\n                    <input type='text' placeholder='About' value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                </div>\r\n                <input className='btn btn-block' type='submit' value='Update' />\r\n                <input className='btn btn-block' type='button' value='Cancel' onClick={() => onCancel()}/>\r\n            </form>}\r\n            {!edit && <div>\r\n                <img src=\"https://www.thesprucepets.com/thmb/e0qbZ-sQwW9Sftl7M8BEVW71cYQ=/1080x0/filters:no_upscale():max_bytes(150000):strip_icc():format(webp)/31878200_171911650157470_2552192489247211520_n-5ba0559b4cedfd0025a1b9ac.jpg\" width=\"150px\"></img>\r\n                <h1>{first}</h1>\r\n                <h1>{last}</h1>\r\n                <h2>{description}</h2>\r\n                <input className='btn btn-block' type='button' value='Edit Profile' onClick={() => onEdit()}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyProfile\r\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":9,"column":10,"nodeType":"78","messageId":"79","endLine":9,"endColumn":30},{"ruleId":"76","severity":1,"message":"80","line":52,"column":9,"nodeType":"78","messageId":"79","endLine":52,"endColumn":18},{"ruleId":"81","severity":1,"message":"82","line":203,"column":3,"nodeType":"78","endLine":203,"endColumn":12,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"84","line":1,"column":19,"nodeType":"78","messageId":"79","endLine":1,"endColumn":29},{"ruleId":"76","severity":1,"message":"85","line":1,"column":10,"nodeType":"78","messageId":"79","endLine":1,"endColumn":17},{"ruleId":"76","severity":1,"message":"84","line":1,"column":19,"nodeType":"78","messageId":"79","endLine":1,"endColumn":29},{"ruleId":"76","severity":1,"message":"86","line":14,"column":9,"nodeType":"78","messageId":"79","endLine":14,"endColumn":15},{"ruleId":"76","severity":1,"message":"87","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":36,"column":17,"nodeType":"78","messageId":"90","endLine":36,"endColumn":23},{"ruleId":"76","severity":1,"message":"91","line":36,"column":17,"nodeType":"78","messageId":"79","endLine":36,"endColumn":23},{"ruleId":"92","severity":1,"message":"93","line":45,"column":17,"nodeType":"94","endLine":45,"endColumn":253},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'isCompositeComponent' is defined but never used.","Identifier","unusedVar","'clearTask' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setfetchFollowContent'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [fetchFollowContent, fetchContentFollowing] as a second argument to the useEffect Hook.",["97"],"'FaTrashAlt' is defined but never used.","'FaTimes' is defined but never used.","'config' is assigned a value but never used.","'Button' is defined but never used.","no-redeclare","'result' is already defined.","redeclared","'result' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Add dependencies array: [fetchFollowContent, fetchContentFollowing]",{"range":"100","text":"101"},[6246,6246],", [fetchFollowContent, fetchContentFollowing]"]